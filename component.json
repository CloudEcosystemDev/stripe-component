{
    "title": "Stripe API",
    "description": "The Stripe REST API. Please see https://stripe.com/docs/api for more details.",
    "docsUrl": "",
    "url": "https://raw.githubusercontent.com/stripe/openapi/master/openapi/spec3.json",
    "envVars": {},
    "credentials": {
        "fields": {
            "server": {
                "label": "Server",
                "viewClass": "SelectView",
                "model": [
                    "https://api.stripe.com/",
                    "--- Custom URL"
                ],
                "required": true
            },
            "otherServer": {
                "label": "Custom Server URL",
                "viewClass": "TextFieldView"
            },
            "auth_username": {
                "label": "Username (basicAuth)",
                "viewClass": "TextFieldView",
                "note": "Basic HTTP authentication. Allowed headers-- Authorization: Basic <api_key> | Authorization: Basic <base64 hash of `api_key:`>"
            },
            "auth_password": {
                "label": "Password (basicAuth)",
                "viewClass": "TextFieldView",
                "note": "Basic HTTP authentication. Allowed headers-- Authorization: Basic <api_key> | Authorization: Basic <base64 hash of `api_key:`>"
            },
            "auth_bearerAuth": {
                "label": "bearerAuth (auth-scheme)",
                "viewClass": "TextFieldView",
                "note": "Bearer HTTP authentication. Allowed headers-- Authorization: Bearer <api_key>"
            }
        }
    },
    "triggers": {
        "GetAccount": {
            "main": "./lib/triggers/GetAccount.js",
            "title": "GetAccount",
            "description": "Retrieves the details of an account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccount.in.json",
                "out": "./lib/schemas/GetAccount.out.json"
            }
        },
        "GetAccountCapabilities": {
            "main": "./lib/triggers/GetAccountCapabilities.js",
            "title": "GetAccountCapabilities",
            "description": "Returns a list of capabilities associated with the account. The capabilities are\nreturned sorted by creation date, with the most recent capability appearing\nfirst.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccountCapabilities.in.json",
                "out": "./lib/schemas/GetAccountCapabilities.out.json"
            }
        },
        "GetAccountExternalAccounts": {
            "main": "./lib/triggers/GetAccountExternalAccounts.js",
            "title": "GetAccountExternalAccounts",
            "description": "List external accounts for an account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccountExternalAccounts.in.json",
                "out": "./lib/schemas/GetAccountExternalAccounts.out.json"
            }
        },
        "GetAccountPeople": {
            "main": "./lib/triggers/GetAccountPeople.js",
            "title": "GetAccountPeople",
            "description": "Returns a list of people associated with the account's legal entity. The people\nare returned sorted by creation date, with the most recent people appearing\nfirst.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccountPeople.in.json",
                "out": "./lib/schemas/GetAccountPeople.out.json"
            }
        },
        "GetAccountPersons": {
            "main": "./lib/triggers/GetAccountPersons.js",
            "title": "GetAccountPersons",
            "description": "Returns a list of people associated with the account's legal entity. The people\nare returned sorted by creation date, with the most recent people appearing\nfirst.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccountPersons.in.json",
                "out": "./lib/schemas/GetAccountPersons.out.json"
            }
        },
        "GetAccounts": {
            "main": "./lib/triggers/GetAccounts.js",
            "title": "GetAccounts",
            "description": "Returns a list of accounts connected to your platform via Connect\n[/docs/connect]. If you're not a platform, the list is empty.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccounts.in.json",
                "out": "./lib/schemas/GetAccounts.out.json"
            }
        },
        "GetAccountsAccountCapabilities": {
            "main": "./lib/triggers/GetAccountsAccountCapabilities.js",
            "title": "GetAccountsAccountCapabilities",
            "description": "Returns a list of capabilities associated with the account. The capabilities are\nreturned sorted by creation date, with the most recent capability appearing\nfirst.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccountsAccountCapabilities.in.json",
                "out": "./lib/schemas/GetAccountsAccountCapabilities.out.json"
            }
        },
        "GetAccountsAccountExternalAccounts": {
            "main": "./lib/triggers/GetAccountsAccountExternalAccounts.js",
            "title": "GetAccountsAccountExternalAccounts",
            "description": "List external accounts for an account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccountsAccountExternalAccounts.in.json",
                "out": "./lib/schemas/GetAccountsAccountExternalAccounts.out.json"
            }
        },
        "GetAccountsAccountPeople": {
            "main": "./lib/triggers/GetAccountsAccountPeople.js",
            "title": "GetAccountsAccountPeople",
            "description": "Returns a list of people associated with the account's legal entity. The people\nare returned sorted by creation date, with the most recent people appearing\nfirst.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccountsAccountPeople.in.json",
                "out": "./lib/schemas/GetAccountsAccountPeople.out.json"
            }
        },
        "GetAccountsAccountPersons": {
            "main": "./lib/triggers/GetAccountsAccountPersons.js",
            "title": "GetAccountsAccountPersons",
            "description": "Returns a list of people associated with the account's legal entity. The people\nare returned sorted by creation date, with the most recent people appearing\nfirst.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccountsAccountPersons.in.json",
                "out": "./lib/schemas/GetAccountsAccountPersons.out.json"
            }
        },
        "GetApplePayDomains": {
            "main": "./lib/triggers/GetApplePayDomains.js",
            "title": "GetApplePayDomains",
            "description": "List apple pay domains.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetApplePayDomains.in.json",
                "out": "./lib/schemas/GetApplePayDomains.out.json"
            }
        },
        "GetApplicationFees": {
            "main": "./lib/triggers/GetApplicationFees.js",
            "title": "GetApplicationFees",
            "description": "Returns a list of application fees you've previously collected. The application\nfees are returned in sorted order, with the most recent fees appearing first.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetApplicationFees.in.json",
                "out": "./lib/schemas/GetApplicationFees.out.json"
            }
        },
        "GetApplicationFeesIdRefunds": {
            "main": "./lib/triggers/GetApplicationFeesIdRefunds.js",
            "title": "GetApplicationFeesIdRefunds",
            "description": "You can see a list of the refunds belonging to a specific application fee. Note\nthat the 10 most recent refunds are always available by default on the\napplication fee object. If you need more than those 10, you can use this API\nmethod and the limit and starting_after parameters to page through additional\nrefunds.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetApplicationFeesIdRefunds.in.json",
                "out": "./lib/schemas/GetApplicationFeesIdRefunds.out.json"
            }
        },
        "GetBalance": {
            "main": "./lib/triggers/GetBalance.js",
            "title": "GetBalance",
            "description": "Retrieves the current account balance, based on the authentication that was used\nto make the request. For a sample request, see Accounting for negative balances\n[/docs/connect/account-balances#accounting-for-negative-balances].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetBalance.in.json",
                "out": "./lib/schemas/GetBalance.out.json"
            }
        },
        "GetBalanceHistory": {
            "main": "./lib/triggers/GetBalanceHistory.js",
            "title": "GetBalanceHistory",
            "description": "Returns a list of transactions that have contributed to the Stripe account\nbalance (e.g., charges, transfers, and so forth). The transactions are returned\nin sorted order, with the most recent transactions appearing first.\n\nNote that this endpoint was previously called \"Balance history\" and used the\npath /v1/balance/history.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetBalanceHistory.in.json",
                "out": "./lib/schemas/GetBalanceHistory.out.json"
            }
        },
        "GetBalanceTransactions": {
            "main": "./lib/triggers/GetBalanceTransactions.js",
            "title": "GetBalanceTransactions",
            "description": "Returns a list of transactions that have contributed to the Stripe account\nbalance (e.g., charges, transfers, and so forth). The transactions are returned\nin sorted order, with the most recent transactions appearing first.\n\nNote that this endpoint was previously called \"Balance history\" and used the\npath /v1/balance/history.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetBalanceTransactions.in.json",
                "out": "./lib/schemas/GetBalanceTransactions.out.json"
            }
        },
        "GetBillingPortalConfigurations": {
            "main": "./lib/triggers/GetBillingPortalConfigurations.js",
            "title": "GetBillingPortalConfigurations",
            "description": "Returns a list of configurations that describe the functionality of the customer\nportal.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetBillingPortalConfigurations.in.json",
                "out": "./lib/schemas/GetBillingPortalConfigurations.out.json"
            }
        },
        "GetBitcoinReceivers": {
            "main": "./lib/triggers/GetBitcoinReceivers.js",
            "title": "GetBitcoinReceivers",
            "description": "Returns a list of your receivers. Receivers are returned sorted by creation\ndate, with the most recently created receivers appearing first.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetBitcoinReceivers.in.json",
                "out": "./lib/schemas/GetBitcoinReceivers.out.json"
            }
        },
        "GetBitcoinReceiversReceiverTransactions": {
            "main": "./lib/triggers/GetBitcoinReceiversReceiverTransactions.js",
            "title": "GetBitcoinReceiversReceiverTransactions",
            "description": "List bitcoin transacitons for a given receiver.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetBitcoinReceiversReceiverTransactions.in.json",
                "out": "./lib/schemas/GetBitcoinReceiversReceiverTransactions.out.json"
            }
        },
        "GetBitcoinTransactions": {
            "main": "./lib/triggers/GetBitcoinTransactions.js",
            "title": "GetBitcoinTransactions",
            "description": "List bitcoin transacitons for a given receiver.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetBitcoinTransactions.in.json",
                "out": "./lib/schemas/GetBitcoinTransactions.out.json"
            }
        },
        "GetCharges": {
            "main": "./lib/triggers/GetCharges.js",
            "title": "GetCharges",
            "description": "Returns a list of charges you've previously created. The charges are returned in\nsorted order, with the most recent charges appearing first.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCharges.in.json",
                "out": "./lib/schemas/GetCharges.out.json"
            }
        },
        "GetChargesChargeDispute": {
            "main": "./lib/triggers/GetChargesChargeDispute.js",
            "title": "GetChargesChargeDispute",
            "description": "Retrieve a dispute for a specified charge.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetChargesChargeDispute.in.json",
                "out": "./lib/schemas/GetChargesChargeDispute.out.json"
            }
        },
        "GetChargesChargeRefunds": {
            "main": "./lib/triggers/GetChargesChargeRefunds.js",
            "title": "GetChargesChargeRefunds",
            "description": "You can see a list of the refunds belonging to a specific charge. Note that the\n10 most recent refunds are always available by default on the charge object. If\nyou need more than those 10, you can use this API method and the limit and \nstarting_after parameters to page through additional refunds.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetChargesChargeRefunds.in.json",
                "out": "./lib/schemas/GetChargesChargeRefunds.out.json"
            }
        },
        "GetCheckoutSessions": {
            "main": "./lib/triggers/GetCheckoutSessions.js",
            "title": "GetCheckoutSessions",
            "description": "Returns a list of Checkout Sessions.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCheckoutSessions.in.json",
                "out": "./lib/schemas/GetCheckoutSessions.out.json"
            }
        },
        "GetCheckoutSessionsSessionLineItems": {
            "main": "./lib/triggers/GetCheckoutSessionsSessionLineItems.js",
            "title": "GetCheckoutSessionsSessionLineItems",
            "description": "When retrieving a Checkout Session, there is an includable line_items property\ncontaining the first handful of those items. There is also a URL where you can\nretrieve the full (paginated) list of line items.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCheckoutSessionsSessionLineItems.in.json",
                "out": "./lib/schemas/GetCheckoutSessionsSessionLineItems.out.json"
            }
        },
        "GetCountrySpecs": {
            "main": "./lib/triggers/GetCountrySpecs.js",
            "title": "GetCountrySpecs",
            "description": "Lists all Country Spec objects available in the API.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCountrySpecs.in.json",
                "out": "./lib/schemas/GetCountrySpecs.out.json"
            }
        },
        "GetCoupons": {
            "main": "./lib/triggers/GetCoupons.js",
            "title": "GetCoupons",
            "description": "Returns a list of your coupons.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCoupons.in.json",
                "out": "./lib/schemas/GetCoupons.out.json"
            }
        },
        "GetCreditNotes": {
            "main": "./lib/triggers/GetCreditNotes.js",
            "title": "GetCreditNotes",
            "description": "Returns a list of credit notes.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCreditNotes.in.json",
                "out": "./lib/schemas/GetCreditNotes.out.json"
            }
        },
        "GetCreditNotesPreview": {
            "main": "./lib/triggers/GetCreditNotesPreview.js",
            "title": "GetCreditNotesPreview",
            "description": "Get a preview of a credit note without creating it.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCreditNotesPreview.in.json",
                "out": "./lib/schemas/GetCreditNotesPreview.out.json"
            }
        },
        "GetCreditNotesPreviewLines": {
            "main": "./lib/triggers/GetCreditNotesPreviewLines.js",
            "title": "GetCreditNotesPreviewLines",
            "description": "When retrieving a credit note preview, you'll get a lines property containing\nthe first handful of those items. This URL you can retrieve the full (paginated)\nlist of line items.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCreditNotesPreviewLines.in.json",
                "out": "./lib/schemas/GetCreditNotesPreviewLines.out.json"
            }
        },
        "GetCreditNotesCreditNoteLines": {
            "main": "./lib/triggers/GetCreditNotesCreditNoteLines.js",
            "title": "GetCreditNotesCreditNoteLines",
            "description": "When retrieving a credit note, you'll get a lines property containing the the\nfirst handful of those items. There is also a URL where you can retrieve the\nfull (paginated) list of line items.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCreditNotesCreditNoteLines.in.json",
                "out": "./lib/schemas/GetCreditNotesCreditNoteLines.out.json"
            }
        },
        "GetCustomers": {
            "main": "./lib/triggers/GetCustomers.js",
            "title": "GetCustomers",
            "description": "Returns a list of your customers. The customers are returned sorted by creation\ndate, with the most recent customers appearing first.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCustomers.in.json",
                "out": "./lib/schemas/GetCustomers.out.json"
            }
        },
        "GetCustomersCustomerBalanceTransactions": {
            "main": "./lib/triggers/GetCustomersCustomerBalanceTransactions.js",
            "title": "GetCustomersCustomerBalanceTransactions",
            "description": "Returns a list of transactions that updated the customer's balances\n[/docs/billing/customer/balance].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCustomersCustomerBalanceTransactions.in.json",
                "out": "./lib/schemas/GetCustomersCustomerBalanceTransactions.out.json"
            }
        },
        "GetCustomersCustomerBankAccounts": {
            "main": "./lib/triggers/GetCustomersCustomerBankAccounts.js",
            "title": "GetCustomersCustomerBankAccounts",
            "description": "You can see a list of the bank accounts belonging to a Customer. Note that the\n10 most recent sources are always available by default on the Customer. If you\nneed more than those 10, you can use this API method and the limit and \nstarting_after parameters to page through additional bank accounts.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCustomersCustomerBankAccounts.in.json",
                "out": "./lib/schemas/GetCustomersCustomerBankAccounts.out.json"
            }
        },
        "GetCustomersCustomerCards": {
            "main": "./lib/triggers/GetCustomersCustomerCards.js",
            "title": "GetCustomersCustomerCards",
            "description": "You can see a list of the cards belonging to a customer. Note that the 10 most\nrecent sources are always available on the Customer object. If you need more\nthan those 10, you can use this API method and the limit and starting_after \nparameters to page through additional cards.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCustomersCustomerCards.in.json",
                "out": "./lib/schemas/GetCustomersCustomerCards.out.json"
            }
        },
        "GetCustomersCustomerDiscount": {
            "main": "./lib/triggers/GetCustomersCustomerDiscount.js",
            "title": "GetCustomersCustomerDiscount",
            "description": "",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCustomersCustomerDiscount.in.json",
                "out": "./lib/schemas/GetCustomersCustomerDiscount.out.json"
            }
        },
        "GetCustomersCustomerSources": {
            "main": "./lib/triggers/GetCustomersCustomerSources.js",
            "title": "GetCustomersCustomerSources",
            "description": "List sources for a specified customer.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCustomersCustomerSources.in.json",
                "out": "./lib/schemas/GetCustomersCustomerSources.out.json"
            }
        },
        "GetCustomersCustomerSubscriptions": {
            "main": "./lib/triggers/GetCustomersCustomerSubscriptions.js",
            "title": "GetCustomersCustomerSubscriptions",
            "description": "You can see a list of the customer's active subscriptions. Note that the 10 most\nrecent active subscriptions are always available by default on the customer\nobject. If you need more than those 10, you can use the limit and starting_after\nparameters to page through additional subscriptions.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCustomersCustomerSubscriptions.in.json",
                "out": "./lib/schemas/GetCustomersCustomerSubscriptions.out.json"
            }
        },
        "GetCustomersCustomerSubscriptionsSubscriptionExposedIdDiscount": {
            "main": "./lib/triggers/GetCustomersCustomerSubscriptionsSubscriptionExposedIdDiscount.js",
            "title": "GetCustomersCustomerSubscriptionsSubscriptionExposedIdDiscount",
            "description": "",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCustomersCustomerSubscriptionsSubscriptionExposedIdDiscount.in.json",
                "out": "./lib/schemas/GetCustomersCustomerSubscriptionsSubscriptionExposedIdDiscount.out.json"
            }
        },
        "GetCustomersCustomerTaxIds": {
            "main": "./lib/triggers/GetCustomersCustomerTaxIds.js",
            "title": "GetCustomersCustomerTaxIds",
            "description": "Returns a list of tax IDs for a customer.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCustomersCustomerTaxIds.in.json",
                "out": "./lib/schemas/GetCustomersCustomerTaxIds.out.json"
            }
        },
        "GetDisputes": {
            "main": "./lib/triggers/GetDisputes.js",
            "title": "GetDisputes",
            "description": "Returns a list of your disputes.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetDisputes.in.json",
                "out": "./lib/schemas/GetDisputes.out.json"
            }
        },
        "GetEvents": {
            "main": "./lib/triggers/GetEvents.js",
            "title": "GetEvents",
            "description": "List events, going back up to 30 days. Each event data is rendered according to\nStripe API version at its creation time, specified in event object\n[/docs/api/events/object] api_version attribute (not according to your current\nStripe API version or Stripe-Version header).",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetEvents.in.json",
                "out": "./lib/schemas/GetEvents.out.json"
            }
        },
        "GetExchangeRates": {
            "main": "./lib/triggers/GetExchangeRates.js",
            "title": "GetExchangeRates",
            "description": "Returns a list of objects that contain the rates at which foreign currencies are\nconverted to one another. Only shows the currencies for which Stripe supports.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetExchangeRates.in.json",
                "out": "./lib/schemas/GetExchangeRates.out.json"
            }
        },
        "GetFileLinks": {
            "main": "./lib/triggers/GetFileLinks.js",
            "title": "GetFileLinks",
            "description": "Returns a list of file links.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetFileLinks.in.json",
                "out": "./lib/schemas/GetFileLinks.out.json"
            }
        },
        "GetFiles": {
            "main": "./lib/triggers/GetFiles.js",
            "title": "GetFiles",
            "description": "Returns a list of the files that your account has access to. The files are\nreturned sorted by creation date, with the most recently created files appearing\nfirst.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetFiles.in.json",
                "out": "./lib/schemas/GetFiles.out.json"
            }
        },
        "GetIdentityVerificationReports": {
            "main": "./lib/triggers/GetIdentityVerificationReports.js",
            "title": "GetIdentityVerificationReports",
            "description": "List all verification reports.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetIdentityVerificationReports.in.json",
                "out": "./lib/schemas/GetIdentityVerificationReports.out.json"
            }
        },
        "GetIdentityVerificationSessions": {
            "main": "./lib/triggers/GetIdentityVerificationSessions.js",
            "title": "GetIdentityVerificationSessions",
            "description": "Returns a list of VerificationSessions",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetIdentityVerificationSessions.in.json",
                "out": "./lib/schemas/GetIdentityVerificationSessions.out.json"
            }
        },
        "GetInvoiceitems": {
            "main": "./lib/triggers/GetInvoiceitems.js",
            "title": "GetInvoiceitems",
            "description": "Returns a list of your invoice items. Invoice items are returned sorted by\ncreation date, with the most recently created invoice items appearing first.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetInvoiceitems.in.json",
                "out": "./lib/schemas/GetInvoiceitems.out.json"
            }
        },
        "GetInvoices": {
            "main": "./lib/triggers/GetInvoices.js",
            "title": "GetInvoices",
            "description": "You can list all invoices, or list the invoices for a specific customer. The\ninvoices are returned sorted by creation date, with the most recently created\ninvoices appearing first.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetInvoices.in.json",
                "out": "./lib/schemas/GetInvoices.out.json"
            }
        },
        "GetInvoicesUpcoming": {
            "main": "./lib/triggers/GetInvoicesUpcoming.js",
            "title": "GetInvoicesUpcoming",
            "description": "At any time, you can preview the upcoming invoice for a customer. This will show\nyou all the charges that are pending, including subscription renewal charges,\ninvoice item charges, etc. It will also show you any discounts that are\napplicable to the invoice.\n\nNote that when you are viewing an upcoming invoice, you are simply viewing a\npreview - the invoice has not yet been created. As such, the upcoming invoice\nwill not show up in invoice listing calls, and you cannot use the API to pay or\nedit the invoice. If you want to change the amount that your customer will be\nbilled, you can add, remove, or update pending invoice items, or update the\ncustomer's discount.\n\nYou can preview the effects of updating a subscription, including a preview of\nwhat proration will take place. To ensure that the actual proration is\ncalculated exactly the same as the previewed proration, you should pass a \nproration_date parameter when doing the actual subscription update. The value\npassed in should be the same as the subscription_proration_date returned on the\nupcoming invoice resource. The recommended way to get only the prorations being\npreviewed is to consider only proration line items where period[start] is equal\nto the subscription_proration_date on the upcoming invoice resource.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetInvoicesUpcoming.in.json",
                "out": "./lib/schemas/GetInvoicesUpcoming.out.json"
            }
        },
        "GetInvoicesUpcomingLines": {
            "main": "./lib/triggers/GetInvoicesUpcomingLines.js",
            "title": "GetInvoicesUpcomingLines",
            "description": "When retrieving an upcoming invoice, you'll get a lines property containing the\ntotal count of line items and the first handful of those items. There is also a\nURL where you can retrieve the full (paginated) list of line items.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetInvoicesUpcomingLines.in.json",
                "out": "./lib/schemas/GetInvoicesUpcomingLines.out.json"
            }
        },
        "GetInvoicesInvoiceLines": {
            "main": "./lib/triggers/GetInvoicesInvoiceLines.js",
            "title": "GetInvoicesInvoiceLines",
            "description": "When retrieving an invoice, you'll get a lines property containing the total\ncount of line items and the first handful of those items. There is also a URL\nwhere you can retrieve the full (paginated) list of line items.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetInvoicesInvoiceLines.in.json",
                "out": "./lib/schemas/GetInvoicesInvoiceLines.out.json"
            }
        },
        "GetIssuerFraudRecords": {
            "main": "./lib/triggers/GetIssuerFraudRecords.js",
            "title": "GetIssuerFraudRecords",
            "description": "Returns a list of issuer fraud records.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetIssuerFraudRecords.in.json",
                "out": "./lib/schemas/GetIssuerFraudRecords.out.json"
            }
        },
        "GetIssuingAuthorizations": {
            "main": "./lib/triggers/GetIssuingAuthorizations.js",
            "title": "GetIssuingAuthorizations",
            "description": "Returns a list of Issuing Authorization objects. The objects are sorted in\ndescending order by creation date, with the most recently created object\nappearing first.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetIssuingAuthorizations.in.json",
                "out": "./lib/schemas/GetIssuingAuthorizations.out.json"
            }
        },
        "GetIssuingCardholders": {
            "main": "./lib/triggers/GetIssuingCardholders.js",
            "title": "GetIssuingCardholders",
            "description": "Returns a list of Issuing Cardholder objects. The objects are sorted in\ndescending order by creation date, with the most recently created object\nappearing first.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetIssuingCardholders.in.json",
                "out": "./lib/schemas/GetIssuingCardholders.out.json"
            }
        },
        "GetIssuingCards": {
            "main": "./lib/triggers/GetIssuingCards.js",
            "title": "GetIssuingCards",
            "description": "Returns a list of Issuing Card objects. The objects are sorted in descending\norder by creation date, with the most recently created object appearing first.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetIssuingCards.in.json",
                "out": "./lib/schemas/GetIssuingCards.out.json"
            }
        },
        "GetIssuingDisputes": {
            "main": "./lib/triggers/GetIssuingDisputes.js",
            "title": "GetIssuingDisputes",
            "description": "Returns a list of Issuing Dispute objects. The objects are sorted in descending\norder by creation date, with the most recently created object appearing first.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetIssuingDisputes.in.json",
                "out": "./lib/schemas/GetIssuingDisputes.out.json"
            }
        },
        "GetIssuingSettlements": {
            "main": "./lib/triggers/GetIssuingSettlements.js",
            "title": "GetIssuingSettlements",
            "description": "Returns a list of Issuing Settlement objects. The objects are sorted in\ndescending order by creation date, with the most recently created object\nappearing first.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetIssuingSettlements.in.json",
                "out": "./lib/schemas/GetIssuingSettlements.out.json"
            }
        },
        "GetIssuingTransactions": {
            "main": "./lib/triggers/GetIssuingTransactions.js",
            "title": "GetIssuingTransactions",
            "description": "Returns a list of Issuing Transaction objects. The objects are sorted in\ndescending order by creation date, with the most recently created object\nappearing first.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetIssuingTransactions.in.json",
                "out": "./lib/schemas/GetIssuingTransactions.out.json"
            }
        },
        "GetOrderReturns": {
            "main": "./lib/triggers/GetOrderReturns.js",
            "title": "GetOrderReturns",
            "description": "Returns a list of your order returns. The returns are returned sorted by\ncreation date, with the most recently created return appearing first.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetOrderReturns.in.json",
                "out": "./lib/schemas/GetOrderReturns.out.json"
            }
        },
        "GetOrders": {
            "main": "./lib/triggers/GetOrders.js",
            "title": "GetOrders",
            "description": "Returns a list of your orders. The orders are returned sorted by creation date,\nwith the most recently created orders appearing first.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetOrders.in.json",
                "out": "./lib/schemas/GetOrders.out.json"
            }
        },
        "GetPaymentIntents": {
            "main": "./lib/triggers/GetPaymentIntents.js",
            "title": "GetPaymentIntents",
            "description": "Returns a list of PaymentIntents.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetPaymentIntents.in.json",
                "out": "./lib/schemas/GetPaymentIntents.out.json"
            }
        },
        "GetPaymentMethods": {
            "main": "./lib/triggers/GetPaymentMethods.js",
            "title": "GetPaymentMethods",
            "description": "Returns a list of PaymentMethods for a given Customer",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetPaymentMethods.in.json",
                "out": "./lib/schemas/GetPaymentMethods.out.json"
            }
        },
        "GetPayouts": {
            "main": "./lib/triggers/GetPayouts.js",
            "title": "GetPayouts",
            "description": "Returns a list of existing payouts sent to third-party bank accounts or that\nStripe has sent you. The payouts are returned in sorted order, with the most\nrecently created payouts appearing first.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetPayouts.in.json",
                "out": "./lib/schemas/GetPayouts.out.json"
            }
        },
        "GetPlans": {
            "main": "./lib/triggers/GetPlans.js",
            "title": "GetPlans",
            "description": "Returns a list of your plans.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetPlans.in.json",
                "out": "./lib/schemas/GetPlans.out.json"
            }
        },
        "GetPrices": {
            "main": "./lib/triggers/GetPrices.js",
            "title": "GetPrices",
            "description": "Returns a list of your prices.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetPrices.in.json",
                "out": "./lib/schemas/GetPrices.out.json"
            }
        },
        "GetProducts": {
            "main": "./lib/triggers/GetProducts.js",
            "title": "GetProducts",
            "description": "Returns a list of your products. The products are returned sorted by creation\ndate, with the most recently created products appearing first.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetProducts.in.json",
                "out": "./lib/schemas/GetProducts.out.json"
            }
        },
        "GetPromotionCodes": {
            "main": "./lib/triggers/GetPromotionCodes.js",
            "title": "GetPromotionCodes",
            "description": "Returns a list of your promotion codes.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetPromotionCodes.in.json",
                "out": "./lib/schemas/GetPromotionCodes.out.json"
            }
        },
        "GetQuotes": {
            "main": "./lib/triggers/GetQuotes.js",
            "title": "GetQuotes",
            "description": "Returns a list of your quotes.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetQuotes.in.json",
                "out": "./lib/schemas/GetQuotes.out.json"
            }
        },
        "GetQuotesQuoteComputedUpfrontLineItems": {
            "main": "./lib/triggers/GetQuotesQuoteComputedUpfrontLineItems.js",
            "title": "GetQuotesQuoteComputedUpfrontLineItems",
            "description": "When retrieving a quote, there is an includable computed.upfront.line_items\n[https://stripe.com/docs/api/quotes/object#quote_object-computed-upfront-line_items] \nproperty containing the first handful of those items. There is also a URL where\nyou can retrieve the full (paginated) list of upfront line items.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetQuotesQuoteComputedUpfrontLineItems.in.json",
                "out": "./lib/schemas/GetQuotesQuoteComputedUpfrontLineItems.out.json"
            }
        },
        "GetQuotesQuoteLineItems": {
            "main": "./lib/triggers/GetQuotesQuoteLineItems.js",
            "title": "GetQuotesQuoteLineItems",
            "description": "When retrieving a quote, there is an includable line_items property containing\nthe first handful of those items. There is also a URL where you can retrieve the\nfull (paginated) list of line items.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetQuotesQuoteLineItems.in.json",
                "out": "./lib/schemas/GetQuotesQuoteLineItems.out.json"
            }
        },
        "GetQuotesQuotePdf": {
            "main": "./lib/triggers/GetQuotesQuotePdf.js",
            "title": "GetQuotesQuotePdf",
            "description": "Download the PDF for a finalized quote",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetQuotesQuotePdf.in.json",
                "out": "./lib/schemas/GetQuotesQuotePdf.out.json"
            }
        },
        "GetRadarEarlyFraudWarnings": {
            "main": "./lib/triggers/GetRadarEarlyFraudWarnings.js",
            "title": "GetRadarEarlyFraudWarnings",
            "description": "Returns a list of early fraud warnings.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetRadarEarlyFraudWarnings.in.json",
                "out": "./lib/schemas/GetRadarEarlyFraudWarnings.out.json"
            }
        },
        "GetRadarValueListItems": {
            "main": "./lib/triggers/GetRadarValueListItems.js",
            "title": "GetRadarValueListItems",
            "description": "Returns a list of ValueListItem objects. The objects are sorted in descending\norder by creation date, with the most recently created object appearing first.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetRadarValueListItems.in.json",
                "out": "./lib/schemas/GetRadarValueListItems.out.json"
            }
        },
        "GetRadarValueLists": {
            "main": "./lib/triggers/GetRadarValueLists.js",
            "title": "GetRadarValueLists",
            "description": "Returns a list of ValueList objects. The objects are sorted in descending order\nby creation date, with the most recently created object appearing first.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetRadarValueLists.in.json",
                "out": "./lib/schemas/GetRadarValueLists.out.json"
            }
        },
        "GetRecipients": {
            "main": "./lib/triggers/GetRecipients.js",
            "title": "GetRecipients",
            "description": "Returns a list of your recipients. The recipients are returned sorted by\ncreation date, with the most recently created recipients appearing first.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetRecipients.in.json",
                "out": "./lib/schemas/GetRecipients.out.json"
            }
        },
        "GetRefunds": {
            "main": "./lib/triggers/GetRefunds.js",
            "title": "GetRefunds",
            "description": "Returns a list of all refunds you've previously created. The refunds are\nreturned in sorted order, with the most recent refunds appearing first. For\nconvenience, the 10 most recent refunds are always available by default on the\ncharge object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetRefunds.in.json",
                "out": "./lib/schemas/GetRefunds.out.json"
            }
        },
        "GetReportingReportRuns": {
            "main": "./lib/triggers/GetReportingReportRuns.js",
            "title": "GetReportingReportRuns",
            "description": "Returns a list of Report Runs, with the most recent appearing first.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetReportingReportRuns.in.json",
                "out": "./lib/schemas/GetReportingReportRuns.out.json"
            }
        },
        "GetReportingReportTypes": {
            "main": "./lib/triggers/GetReportingReportTypes.js",
            "title": "GetReportingReportTypes",
            "description": "Returns a full list of Report Types.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetReportingReportTypes.in.json",
                "out": "./lib/schemas/GetReportingReportTypes.out.json"
            }
        },
        "GetReviews": {
            "main": "./lib/triggers/GetReviews.js",
            "title": "GetReviews",
            "description": "Returns a list of Review objects that have open set to true. The objects are\nsorted in descending order by creation date, with the most recently created\nobject appearing first.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetReviews.in.json",
                "out": "./lib/schemas/GetReviews.out.json"
            }
        },
        "GetSetupAttempts": {
            "main": "./lib/triggers/GetSetupAttempts.js",
            "title": "GetSetupAttempts",
            "description": "Returns a list of SetupAttempts associated with a provided SetupIntent.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSetupAttempts.in.json",
                "out": "./lib/schemas/GetSetupAttempts.out.json"
            }
        },
        "GetSetupIntents": {
            "main": "./lib/triggers/GetSetupIntents.js",
            "title": "GetSetupIntents",
            "description": "Returns a list of SetupIntents.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSetupIntents.in.json",
                "out": "./lib/schemas/GetSetupIntents.out.json"
            }
        },
        "GetSigmaScheduledQueryRuns": {
            "main": "./lib/triggers/GetSigmaScheduledQueryRuns.js",
            "title": "GetSigmaScheduledQueryRuns",
            "description": "Returns a list of scheduled query runs.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSigmaScheduledQueryRuns.in.json",
                "out": "./lib/schemas/GetSigmaScheduledQueryRuns.out.json"
            }
        },
        "GetSkus": {
            "main": "./lib/triggers/GetSkus.js",
            "title": "GetSkus",
            "description": "Returns a list of your SKUs. The SKUs are returned sorted by creation date, with\nthe most recently created SKUs appearing first.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSkus.in.json",
                "out": "./lib/schemas/GetSkus.out.json"
            }
        },
        "GetSourcesSourceSourceTransactions": {
            "main": "./lib/triggers/GetSourcesSourceSourceTransactions.js",
            "title": "GetSourcesSourceSourceTransactions",
            "description": "List source transactions for a given source.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSourcesSourceSourceTransactions.in.json",
                "out": "./lib/schemas/GetSourcesSourceSourceTransactions.out.json"
            }
        },
        "GetSubscriptionItems": {
            "main": "./lib/triggers/GetSubscriptionItems.js",
            "title": "GetSubscriptionItems",
            "description": "Returns a list of your subscription items for a given subscription.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSubscriptionItems.in.json",
                "out": "./lib/schemas/GetSubscriptionItems.out.json"
            }
        },
        "GetSubscriptionItemsSubscriptionItemUsageRecordSummaries": {
            "main": "./lib/triggers/GetSubscriptionItemsSubscriptionItemUsageRecordSummaries.js",
            "title": "GetSubscriptionItemsSubscriptionItemUsageRecordSummaries",
            "description": "For the specified subscription item, returns a list of summary objects. Each\nobject in the list provides usage information that's been summarized from\nmultiple usage records and over a subscription billing period (e.g., 15 usage\nrecords in the month of September).\n\nThe list is sorted in reverse-chronological order (newest first). The first list\nitem represents the most current usage period that hasn't ended yet. Since new\nusage records can still be added, the returned summary information for the\nsubscription item's ID should be seen as unstable until the subscription billing\nperiod ends.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSubscriptionItemsSubscriptionItemUsageRecordSummaries.in.json",
                "out": "./lib/schemas/GetSubscriptionItemsSubscriptionItemUsageRecordSummaries.out.json"
            }
        },
        "GetSubscriptionSchedules": {
            "main": "./lib/triggers/GetSubscriptionSchedules.js",
            "title": "GetSubscriptionSchedules",
            "description": "Retrieves the list of your subscription schedules.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSubscriptionSchedules.in.json",
                "out": "./lib/schemas/GetSubscriptionSchedules.out.json"
            }
        },
        "GetSubscriptions": {
            "main": "./lib/triggers/GetSubscriptions.js",
            "title": "GetSubscriptions",
            "description": "By default, returns a list of subscriptions that have not been canceled. In\norder to list canceled subscriptions, specify status=canceled.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSubscriptions.in.json",
                "out": "./lib/schemas/GetSubscriptions.out.json"
            }
        },
        "GetTaxCodes": {
            "main": "./lib/triggers/GetTaxCodes.js",
            "title": "GetTaxCodes",
            "description": "A list of all tax codes available [https://stripe.com/docs/tax/tax-codes] to add\nto Products in order to allow specific tax calculations.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTaxCodes.in.json",
                "out": "./lib/schemas/GetTaxCodes.out.json"
            }
        },
        "GetTaxRates": {
            "main": "./lib/triggers/GetTaxRates.js",
            "title": "GetTaxRates",
            "description": "Returns a list of your tax rates. Tax rates are returned sorted by creation\ndate, with the most recently created tax rates appearing first.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTaxRates.in.json",
                "out": "./lib/schemas/GetTaxRates.out.json"
            }
        },
        "GetTerminalLocations": {
            "main": "./lib/triggers/GetTerminalLocations.js",
            "title": "GetTerminalLocations",
            "description": "Returns a list of Location objects.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTerminalLocations.in.json",
                "out": "./lib/schemas/GetTerminalLocations.out.json"
            }
        },
        "GetTerminalReaders": {
            "main": "./lib/triggers/GetTerminalReaders.js",
            "title": "GetTerminalReaders",
            "description": "Returns a list of Reader objects.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTerminalReaders.in.json",
                "out": "./lib/schemas/GetTerminalReaders.out.json"
            }
        },
        "GetTopups": {
            "main": "./lib/triggers/GetTopups.js",
            "title": "GetTopups",
            "description": "Returns a list of top-ups.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTopups.in.json",
                "out": "./lib/schemas/GetTopups.out.json"
            }
        },
        "GetTransfers": {
            "main": "./lib/triggers/GetTransfers.js",
            "title": "GetTransfers",
            "description": "Returns a list of existing transfers sent to connected accounts. The transfers\nare returned in sorted order, with the most recently created transfers appearing\nfirst.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTransfers.in.json",
                "out": "./lib/schemas/GetTransfers.out.json"
            }
        },
        "GetTransfersIdReversals": {
            "main": "./lib/triggers/GetTransfersIdReversals.js",
            "title": "GetTransfersIdReversals",
            "description": "You can see a list of the reversals belonging to a specific transfer. Note that\nthe 10 most recent reversals are always available by default on the transfer\nobject. If you need more than those 10, you can use this API method and the \nlimit and starting_after parameters to page through additional reversals.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTransfersIdReversals.in.json",
                "out": "./lib/schemas/GetTransfersIdReversals.out.json"
            }
        },
        "GetWebhookEndpoints": {
            "main": "./lib/triggers/GetWebhookEndpoints.js",
            "title": "GetWebhookEndpoints",
            "description": "Returns a list of your webhook endpoints.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetWebhookEndpoints.in.json",
                "out": "./lib/schemas/GetWebhookEndpoints.out.json"
            }
        }
    },
    "actions": {
        "Post3dSecure": {
            "main": "./lib/actions/Post3dSecure.js",
            "title": "Post3dSecure",
            "description": "Initiate 3D Secure authentication.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Post3dSecure.in.json",
                "out": "./lib/schemas/Post3dSecure.out.json"
            }
        },
        "Get3dSecureThreeDSecure": {
            "main": "./lib/actions/Get3dSecureThreeDSecure.js",
            "title": "Get3dSecureThreeDSecure",
            "description": "Retrieves a 3D Secure object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/Get3dSecureThreeDSecure.in.json",
                "out": "./lib/schemas/Get3dSecureThreeDSecure.out.json"
            }
        },
        "DeleteAccount": {
            "main": "./lib/actions/DeleteAccount.js",
            "title": "DeleteAccount",
            "description": "With Connect [/docs/connect], you can delete accounts you manage.\n\nAccounts created using test-mode keys can be deleted at any time. Custom or\nExpress accounts created using live-mode keys can only be deleted once all\nbalances are zero.\n\nIf you want to delete your own account, use the account information tab in your\naccount settings [https://dashboard.stripe.com/account] instead.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteAccount.in.json",
                "out": "./lib/schemas/DeleteAccount.out.json"
            }
        },
        "PostAccount": {
            "main": "./lib/actions/PostAccount.js",
            "title": "PostAccount",
            "description": "Updates a connected account [/docs/connect/accounts] by setting the values of\nthe parameters passed. Any parameters not provided are left unchanged. Most\nparameters can be changed only for Custom accounts. (These are marked Custom\nOnly below.) Parameters marked Custom and Express are not supported for Standard\naccounts.\n\nTo update your own account, use the Dashboard\n[https://dashboard.stripe.com/account]. Refer to our Connect\n[/docs/connect/updating-accounts] documentation to learn more about updating\naccounts.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccount.in.json",
                "out": "./lib/schemas/PostAccount.out.json"
            }
        },
        "PostAccountBankAccounts": {
            "main": "./lib/actions/PostAccountBankAccounts.js",
            "title": "PostAccountBankAccounts",
            "description": "Create an external account for a given account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountBankAccounts.in.json",
                "out": "./lib/schemas/PostAccountBankAccounts.out.json"
            }
        },
        "DeleteAccountBankAccountsId": {
            "main": "./lib/actions/DeleteAccountBankAccountsId.js",
            "title": "DeleteAccountBankAccountsId",
            "description": "Delete a specified external account for a given account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteAccountBankAccountsId.in.json",
                "out": "./lib/schemas/DeleteAccountBankAccountsId.out.json"
            }
        },
        "GetAccountBankAccountsId": {
            "main": "./lib/actions/GetAccountBankAccountsId.js",
            "title": "GetAccountBankAccountsId",
            "description": "Retrieve a specified external account for a given account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccountBankAccountsId.in.json",
                "out": "./lib/schemas/GetAccountBankAccountsId.out.json"
            }
        },
        "PostAccountBankAccountsId": {
            "main": "./lib/actions/PostAccountBankAccountsId.js",
            "title": "PostAccountBankAccountsId",
            "description": "Updates the metadata, account holder name, account holder type of a bank account\nbelonging to a Custom account [/docs/connect/custom-accounts], and optionally\nsets it as the default for its currency. Other bank account details are not\neditable by design.\n\nYou can re-enable a disabled bank account by performing an update call without\nproviding any arguments or changes.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountBankAccountsId.in.json",
                "out": "./lib/schemas/PostAccountBankAccountsId.out.json"
            }
        },
        "GetAccountCapabilitiesCapability": {
            "main": "./lib/actions/GetAccountCapabilitiesCapability.js",
            "title": "GetAccountCapabilitiesCapability",
            "description": "Retrieves information about the specified Account Capability.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccountCapabilitiesCapability.in.json",
                "out": "./lib/schemas/GetAccountCapabilitiesCapability.out.json"
            }
        },
        "PostAccountCapabilitiesCapability": {
            "main": "./lib/actions/PostAccountCapabilitiesCapability.js",
            "title": "PostAccountCapabilitiesCapability",
            "description": "Updates an existing Account Capability.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountCapabilitiesCapability.in.json",
                "out": "./lib/schemas/PostAccountCapabilitiesCapability.out.json"
            }
        },
        "PostAccountExternalAccounts": {
            "main": "./lib/actions/PostAccountExternalAccounts.js",
            "title": "PostAccountExternalAccounts",
            "description": "Create an external account for a given account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountExternalAccounts.in.json",
                "out": "./lib/schemas/PostAccountExternalAccounts.out.json"
            }
        },
        "DeleteAccountExternalAccountsId": {
            "main": "./lib/actions/DeleteAccountExternalAccountsId.js",
            "title": "DeleteAccountExternalAccountsId",
            "description": "Delete a specified external account for a given account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteAccountExternalAccountsId.in.json",
                "out": "./lib/schemas/DeleteAccountExternalAccountsId.out.json"
            }
        },
        "GetAccountExternalAccountsId": {
            "main": "./lib/actions/GetAccountExternalAccountsId.js",
            "title": "GetAccountExternalAccountsId",
            "description": "Retrieve a specified external account for a given account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccountExternalAccountsId.in.json",
                "out": "./lib/schemas/GetAccountExternalAccountsId.out.json"
            }
        },
        "PostAccountExternalAccountsId": {
            "main": "./lib/actions/PostAccountExternalAccountsId.js",
            "title": "PostAccountExternalAccountsId",
            "description": "Updates the metadata, account holder name, account holder type of a bank account\nbelonging to a Custom account [/docs/connect/custom-accounts], and optionally\nsets it as the default for its currency. Other bank account details are not\neditable by design.\n\nYou can re-enable a disabled bank account by performing an update call without\nproviding any arguments or changes.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountExternalAccountsId.in.json",
                "out": "./lib/schemas/PostAccountExternalAccountsId.out.json"
            }
        },
        "PostAccountLoginLinks": {
            "main": "./lib/actions/PostAccountLoginLinks.js",
            "title": "PostAccountLoginLinks",
            "description": "Creates a single-use login link for an Express account to access their Stripe\ndashboard.\n\nYou may only create login links for Express accounts\n[/docs/connect/express-accounts] connected to your platform.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountLoginLinks.in.json",
                "out": "./lib/schemas/PostAccountLoginLinks.out.json"
            }
        },
        "PostAccountPeople": {
            "main": "./lib/actions/PostAccountPeople.js",
            "title": "PostAccountPeople",
            "description": "Creates a new person.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountPeople.in.json",
                "out": "./lib/schemas/PostAccountPeople.out.json"
            }
        },
        "DeleteAccountPeoplePerson": {
            "main": "./lib/actions/DeleteAccountPeoplePerson.js",
            "title": "DeleteAccountPeoplePerson",
            "description": "Deletes an existing person's relationship to the account's legal entity. Any\nperson with a relationship for an account can be deleted through the API, except\nif the person is the account_opener. If your integration is using the executive \nparameter, you cannot delete the only verified executive on file.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteAccountPeoplePerson.in.json",
                "out": "./lib/schemas/DeleteAccountPeoplePerson.out.json"
            }
        },
        "GetAccountPeoplePerson": {
            "main": "./lib/actions/GetAccountPeoplePerson.js",
            "title": "GetAccountPeoplePerson",
            "description": "Retrieves an existing person.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccountPeoplePerson.in.json",
                "out": "./lib/schemas/GetAccountPeoplePerson.out.json"
            }
        },
        "PostAccountPeoplePerson": {
            "main": "./lib/actions/PostAccountPeoplePerson.js",
            "title": "PostAccountPeoplePerson",
            "description": "Updates an existing person.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountPeoplePerson.in.json",
                "out": "./lib/schemas/PostAccountPeoplePerson.out.json"
            }
        },
        "PostAccountPersons": {
            "main": "./lib/actions/PostAccountPersons.js",
            "title": "PostAccountPersons",
            "description": "Creates a new person.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountPersons.in.json",
                "out": "./lib/schemas/PostAccountPersons.out.json"
            }
        },
        "DeleteAccountPersonsPerson": {
            "main": "./lib/actions/DeleteAccountPersonsPerson.js",
            "title": "DeleteAccountPersonsPerson",
            "description": "Deletes an existing person's relationship to the account's legal entity. Any\nperson with a relationship for an account can be deleted through the API, except\nif the person is the account_opener. If your integration is using the executive \nparameter, you cannot delete the only verified executive on file.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteAccountPersonsPerson.in.json",
                "out": "./lib/schemas/DeleteAccountPersonsPerson.out.json"
            }
        },
        "GetAccountPersonsPerson": {
            "main": "./lib/actions/GetAccountPersonsPerson.js",
            "title": "GetAccountPersonsPerson",
            "description": "Retrieves an existing person.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccountPersonsPerson.in.json",
                "out": "./lib/schemas/GetAccountPersonsPerson.out.json"
            }
        },
        "PostAccountPersonsPerson": {
            "main": "./lib/actions/PostAccountPersonsPerson.js",
            "title": "PostAccountPersonsPerson",
            "description": "Updates an existing person.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountPersonsPerson.in.json",
                "out": "./lib/schemas/PostAccountPersonsPerson.out.json"
            }
        },
        "PostAccountLinks": {
            "main": "./lib/actions/PostAccountLinks.js",
            "title": "PostAccountLinks",
            "description": "Creates an AccountLink object that includes a single-use Stripe URL that the\nplatform can redirect their user to in order to take them through the Connect\nOnboarding flow.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountLinks.in.json",
                "out": "./lib/schemas/PostAccountLinks.out.json"
            }
        },
        "PostAccounts": {
            "main": "./lib/actions/PostAccounts.js",
            "title": "PostAccounts",
            "description": "With Connect [/docs/connect], you can create Stripe accounts for your users. To\ndo this, you'll first need to register your platform\n[https://dashboard.stripe.com/account/applications/settings].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccounts.in.json",
                "out": "./lib/schemas/PostAccounts.out.json"
            }
        },
        "DeleteAccountsAccount": {
            "main": "./lib/actions/DeleteAccountsAccount.js",
            "title": "DeleteAccountsAccount",
            "description": "With Connect [/docs/connect], you can delete accounts you manage.\n\nAccounts created using test-mode keys can be deleted at any time. Custom or\nExpress accounts created using live-mode keys can only be deleted once all\nbalances are zero.\n\nIf you want to delete your own account, use the account information tab in your\naccount settings [https://dashboard.stripe.com/account] instead.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteAccountsAccount.in.json",
                "out": "./lib/schemas/DeleteAccountsAccount.out.json"
            }
        },
        "GetAccountsAccount": {
            "main": "./lib/actions/GetAccountsAccount.js",
            "title": "GetAccountsAccount",
            "description": "Retrieves the details of an account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccountsAccount.in.json",
                "out": "./lib/schemas/GetAccountsAccount.out.json"
            }
        },
        "PostAccountsAccount": {
            "main": "./lib/actions/PostAccountsAccount.js",
            "title": "PostAccountsAccount",
            "description": "Updates a connected account [/docs/connect/accounts] by setting the values of\nthe parameters passed. Any parameters not provided are left unchanged. Most\nparameters can be changed only for Custom accounts. (These are marked Custom\nOnly below.) Parameters marked Custom and Express are not supported for Standard\naccounts.\n\nTo update your own account, use the Dashboard\n[https://dashboard.stripe.com/account]. Refer to our Connect\n[/docs/connect/updating-accounts] documentation to learn more about updating\naccounts.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountsAccount.in.json",
                "out": "./lib/schemas/PostAccountsAccount.out.json"
            }
        },
        "PostAccountsAccountBankAccounts": {
            "main": "./lib/actions/PostAccountsAccountBankAccounts.js",
            "title": "PostAccountsAccountBankAccounts",
            "description": "Create an external account for a given account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountsAccountBankAccounts.in.json",
                "out": "./lib/schemas/PostAccountsAccountBankAccounts.out.json"
            }
        },
        "DeleteAccountsAccountBankAccountsId": {
            "main": "./lib/actions/DeleteAccountsAccountBankAccountsId.js",
            "title": "DeleteAccountsAccountBankAccountsId",
            "description": "Delete a specified external account for a given account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteAccountsAccountBankAccountsId.in.json",
                "out": "./lib/schemas/DeleteAccountsAccountBankAccountsId.out.json"
            }
        },
        "GetAccountsAccountBankAccountsId": {
            "main": "./lib/actions/GetAccountsAccountBankAccountsId.js",
            "title": "GetAccountsAccountBankAccountsId",
            "description": "Retrieve a specified external account for a given account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccountsAccountBankAccountsId.in.json",
                "out": "./lib/schemas/GetAccountsAccountBankAccountsId.out.json"
            }
        },
        "PostAccountsAccountBankAccountsId": {
            "main": "./lib/actions/PostAccountsAccountBankAccountsId.js",
            "title": "PostAccountsAccountBankAccountsId",
            "description": "Updates the metadata, account holder name, account holder type of a bank account\nbelonging to a Custom account [/docs/connect/custom-accounts], and optionally\nsets it as the default for its currency. Other bank account details are not\neditable by design.\n\nYou can re-enable a disabled bank account by performing an update call without\nproviding any arguments or changes.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountsAccountBankAccountsId.in.json",
                "out": "./lib/schemas/PostAccountsAccountBankAccountsId.out.json"
            }
        },
        "GetAccountsAccountCapabilitiesCapability": {
            "main": "./lib/actions/GetAccountsAccountCapabilitiesCapability.js",
            "title": "GetAccountsAccountCapabilitiesCapability",
            "description": "Retrieves information about the specified Account Capability.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccountsAccountCapabilitiesCapability.in.json",
                "out": "./lib/schemas/GetAccountsAccountCapabilitiesCapability.out.json"
            }
        },
        "PostAccountsAccountCapabilitiesCapability": {
            "main": "./lib/actions/PostAccountsAccountCapabilitiesCapability.js",
            "title": "PostAccountsAccountCapabilitiesCapability",
            "description": "Updates an existing Account Capability.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountsAccountCapabilitiesCapability.in.json",
                "out": "./lib/schemas/PostAccountsAccountCapabilitiesCapability.out.json"
            }
        },
        "PostAccountsAccountExternalAccounts": {
            "main": "./lib/actions/PostAccountsAccountExternalAccounts.js",
            "title": "PostAccountsAccountExternalAccounts",
            "description": "Create an external account for a given account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountsAccountExternalAccounts.in.json",
                "out": "./lib/schemas/PostAccountsAccountExternalAccounts.out.json"
            }
        },
        "DeleteAccountsAccountExternalAccountsId": {
            "main": "./lib/actions/DeleteAccountsAccountExternalAccountsId.js",
            "title": "DeleteAccountsAccountExternalAccountsId",
            "description": "Delete a specified external account for a given account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteAccountsAccountExternalAccountsId.in.json",
                "out": "./lib/schemas/DeleteAccountsAccountExternalAccountsId.out.json"
            }
        },
        "GetAccountsAccountExternalAccountsId": {
            "main": "./lib/actions/GetAccountsAccountExternalAccountsId.js",
            "title": "GetAccountsAccountExternalAccountsId",
            "description": "Retrieve a specified external account for a given account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccountsAccountExternalAccountsId.in.json",
                "out": "./lib/schemas/GetAccountsAccountExternalAccountsId.out.json"
            }
        },
        "PostAccountsAccountExternalAccountsId": {
            "main": "./lib/actions/PostAccountsAccountExternalAccountsId.js",
            "title": "PostAccountsAccountExternalAccountsId",
            "description": "Updates the metadata, account holder name, account holder type of a bank account\nbelonging to a Custom account [/docs/connect/custom-accounts], and optionally\nsets it as the default for its currency. Other bank account details are not\neditable by design.\n\nYou can re-enable a disabled bank account by performing an update call without\nproviding any arguments or changes.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountsAccountExternalAccountsId.in.json",
                "out": "./lib/schemas/PostAccountsAccountExternalAccountsId.out.json"
            }
        },
        "PostAccountsAccountLoginLinks": {
            "main": "./lib/actions/PostAccountsAccountLoginLinks.js",
            "title": "PostAccountsAccountLoginLinks",
            "description": "Creates a single-use login link for an Express account to access their Stripe\ndashboard.\n\nYou may only create login links for Express accounts\n[/docs/connect/express-accounts] connected to your platform.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountsAccountLoginLinks.in.json",
                "out": "./lib/schemas/PostAccountsAccountLoginLinks.out.json"
            }
        },
        "PostAccountsAccountPeople": {
            "main": "./lib/actions/PostAccountsAccountPeople.js",
            "title": "PostAccountsAccountPeople",
            "description": "Creates a new person.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountsAccountPeople.in.json",
                "out": "./lib/schemas/PostAccountsAccountPeople.out.json"
            }
        },
        "DeleteAccountsAccountPeoplePerson": {
            "main": "./lib/actions/DeleteAccountsAccountPeoplePerson.js",
            "title": "DeleteAccountsAccountPeoplePerson",
            "description": "Deletes an existing person's relationship to the account's legal entity. Any\nperson with a relationship for an account can be deleted through the API, except\nif the person is the account_opener. If your integration is using the executive \nparameter, you cannot delete the only verified executive on file.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteAccountsAccountPeoplePerson.in.json",
                "out": "./lib/schemas/DeleteAccountsAccountPeoplePerson.out.json"
            }
        },
        "GetAccountsAccountPeoplePerson": {
            "main": "./lib/actions/GetAccountsAccountPeoplePerson.js",
            "title": "GetAccountsAccountPeoplePerson",
            "description": "Retrieves an existing person.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccountsAccountPeoplePerson.in.json",
                "out": "./lib/schemas/GetAccountsAccountPeoplePerson.out.json"
            }
        },
        "PostAccountsAccountPeoplePerson": {
            "main": "./lib/actions/PostAccountsAccountPeoplePerson.js",
            "title": "PostAccountsAccountPeoplePerson",
            "description": "Updates an existing person.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountsAccountPeoplePerson.in.json",
                "out": "./lib/schemas/PostAccountsAccountPeoplePerson.out.json"
            }
        },
        "PostAccountsAccountPersons": {
            "main": "./lib/actions/PostAccountsAccountPersons.js",
            "title": "PostAccountsAccountPersons",
            "description": "Creates a new person.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountsAccountPersons.in.json",
                "out": "./lib/schemas/PostAccountsAccountPersons.out.json"
            }
        },
        "DeleteAccountsAccountPersonsPerson": {
            "main": "./lib/actions/DeleteAccountsAccountPersonsPerson.js",
            "title": "DeleteAccountsAccountPersonsPerson",
            "description": "Deletes an existing person's relationship to the account's legal entity. Any\nperson with a relationship for an account can be deleted through the API, except\nif the person is the account_opener. If your integration is using the executive \nparameter, you cannot delete the only verified executive on file.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteAccountsAccountPersonsPerson.in.json",
                "out": "./lib/schemas/DeleteAccountsAccountPersonsPerson.out.json"
            }
        },
        "GetAccountsAccountPersonsPerson": {
            "main": "./lib/actions/GetAccountsAccountPersonsPerson.js",
            "title": "GetAccountsAccountPersonsPerson",
            "description": "Retrieves an existing person.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetAccountsAccountPersonsPerson.in.json",
                "out": "./lib/schemas/GetAccountsAccountPersonsPerson.out.json"
            }
        },
        "PostAccountsAccountPersonsPerson": {
            "main": "./lib/actions/PostAccountsAccountPersonsPerson.js",
            "title": "PostAccountsAccountPersonsPerson",
            "description": "Updates an existing person.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountsAccountPersonsPerson.in.json",
                "out": "./lib/schemas/PostAccountsAccountPersonsPerson.out.json"
            }
        },
        "PostAccountsAccountReject": {
            "main": "./lib/actions/PostAccountsAccountReject.js",
            "title": "PostAccountsAccountReject",
            "description": "With Connect [/docs/connect], you may flag accounts as suspicious.\n\nTest-mode Custom and Express accounts can be rejected at any time. Accounts\ncreated using live-mode keys may only be rejected once all balances are zero.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostAccountsAccountReject.in.json",
                "out": "./lib/schemas/PostAccountsAccountReject.out.json"
            }
        },
        "PostApplePayDomains": {
            "main": "./lib/actions/PostApplePayDomains.js",
            "title": "PostApplePayDomains",
            "description": "Create an apple pay domain.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostApplePayDomains.in.json",
                "out": "./lib/schemas/PostApplePayDomains.out.json"
            }
        },
        "DeleteApplePayDomainsDomain": {
            "main": "./lib/actions/DeleteApplePayDomainsDomain.js",
            "title": "DeleteApplePayDomainsDomain",
            "description": "Delete an apple pay domain.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteApplePayDomainsDomain.in.json",
                "out": "./lib/schemas/DeleteApplePayDomainsDomain.out.json"
            }
        },
        "GetApplePayDomainsDomain": {
            "main": "./lib/actions/GetApplePayDomainsDomain.js",
            "title": "GetApplePayDomainsDomain",
            "description": "Retrieve an apple pay domain.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetApplePayDomainsDomain.in.json",
                "out": "./lib/schemas/GetApplePayDomainsDomain.out.json"
            }
        },
        "GetApplicationFeesFeeRefundsId": {
            "main": "./lib/actions/GetApplicationFeesFeeRefundsId.js",
            "title": "GetApplicationFeesFeeRefundsId",
            "description": "By default, you can see the 10 most recent refunds stored directly on the\napplication fee object, but you can also retrieve details about a specific\nrefund stored on the application fee.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetApplicationFeesFeeRefundsId.in.json",
                "out": "./lib/schemas/GetApplicationFeesFeeRefundsId.out.json"
            }
        },
        "PostApplicationFeesFeeRefundsId": {
            "main": "./lib/actions/PostApplicationFeesFeeRefundsId.js",
            "title": "PostApplicationFeesFeeRefundsId",
            "description": "Updates the specified application fee refund by setting the values of the\nparameters passed. Any parameters not provided will be left unchanged.\n\nThis request only accepts metadata as an argument.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostApplicationFeesFeeRefundsId.in.json",
                "out": "./lib/schemas/PostApplicationFeesFeeRefundsId.out.json"
            }
        },
        "GetApplicationFeesId": {
            "main": "./lib/actions/GetApplicationFeesId.js",
            "title": "GetApplicationFeesId",
            "description": "Retrieves the details of an application fee that your account has collected. The\nsame information is returned when refunding the application fee.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetApplicationFeesId.in.json",
                "out": "./lib/schemas/GetApplicationFeesId.out.json"
            }
        },
        "PostApplicationFeesIdRefund": {
            "main": "./lib/actions/PostApplicationFeesIdRefund.js",
            "title": "PostApplicationFeesIdRefund",
            "description": "",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostApplicationFeesIdRefund.in.json",
                "out": "./lib/schemas/PostApplicationFeesIdRefund.out.json"
            }
        },
        "PostApplicationFeesIdRefunds": {
            "main": "./lib/actions/PostApplicationFeesIdRefunds.js",
            "title": "PostApplicationFeesIdRefunds",
            "description": "Refunds an application fee that has previously been collected but not yet\nrefunded. Funds will be refunded to the Stripe account from which the fee was\noriginally collected.\n\nYou can optionally refund only part of an application fee. You can do so\nmultiple times, until the entire fee has been refunded.\n\nOnce entirely refunded, an application fee can't be refunded again. This method\nwill raise an error when called on an already-refunded application fee, or when\ntrying to refund more money than is left on an application fee.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostApplicationFeesIdRefunds.in.json",
                "out": "./lib/schemas/PostApplicationFeesIdRefunds.out.json"
            }
        },
        "GetBalanceHistoryId": {
            "main": "./lib/actions/GetBalanceHistoryId.js",
            "title": "GetBalanceHistoryId",
            "description": "Retrieves the balance transaction with the given ID.\n\nNote that this endpoint previously used the path /v1/balance/history/:id.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetBalanceHistoryId.in.json",
                "out": "./lib/schemas/GetBalanceHistoryId.out.json"
            }
        },
        "GetBalanceTransactionsId": {
            "main": "./lib/actions/GetBalanceTransactionsId.js",
            "title": "GetBalanceTransactionsId",
            "description": "Retrieves the balance transaction with the given ID.\n\nNote that this endpoint previously used the path /v1/balance/history/:id.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetBalanceTransactionsId.in.json",
                "out": "./lib/schemas/GetBalanceTransactionsId.out.json"
            }
        },
        "PostBillingPortalConfigurations": {
            "main": "./lib/actions/PostBillingPortalConfigurations.js",
            "title": "PostBillingPortalConfigurations",
            "description": "Creates a configuration that describes the functionality and behavior of a\nPortalSession",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostBillingPortalConfigurations.in.json",
                "out": "./lib/schemas/PostBillingPortalConfigurations.out.json"
            }
        },
        "GetBillingPortalConfigurationsConfiguration": {
            "main": "./lib/actions/GetBillingPortalConfigurationsConfiguration.js",
            "title": "GetBillingPortalConfigurationsConfiguration",
            "description": "Retrieves a configuration that describes the functionality of the customer\nportal.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetBillingPortalConfigurationsConfiguration.in.json",
                "out": "./lib/schemas/GetBillingPortalConfigurationsConfiguration.out.json"
            }
        },
        "PostBillingPortalConfigurationsConfiguration": {
            "main": "./lib/actions/PostBillingPortalConfigurationsConfiguration.js",
            "title": "PostBillingPortalConfigurationsConfiguration",
            "description": "Updates a configuration that describes the functionality of the customer portal.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostBillingPortalConfigurationsConfiguration.in.json",
                "out": "./lib/schemas/PostBillingPortalConfigurationsConfiguration.out.json"
            }
        },
        "PostBillingPortalSessions": {
            "main": "./lib/actions/PostBillingPortalSessions.js",
            "title": "PostBillingPortalSessions",
            "description": "Creates a session of the customer portal.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostBillingPortalSessions.in.json",
                "out": "./lib/schemas/PostBillingPortalSessions.out.json"
            }
        },
        "GetBitcoinReceiversId": {
            "main": "./lib/actions/GetBitcoinReceiversId.js",
            "title": "GetBitcoinReceiversId",
            "description": "Retrieves the Bitcoin receiver with the given ID.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetBitcoinReceiversId.in.json",
                "out": "./lib/schemas/GetBitcoinReceiversId.out.json"
            }
        },
        "PostCharges": {
            "main": "./lib/actions/PostCharges.js",
            "title": "PostCharges",
            "description": "To charge a credit card or other payment source, you create a Charge object. If\nyour API key is in test mode, the supplied payment source (e.g., card) won't\nactually be charged, although everything else will occur as if in live mode.\n(Stripe assumes that the charge would have completed successfully).",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCharges.in.json",
                "out": "./lib/schemas/PostCharges.out.json"
            }
        },
        "GetChargesCharge": {
            "main": "./lib/actions/GetChargesCharge.js",
            "title": "GetChargesCharge",
            "description": "Retrieves the details of a charge that has previously been created. Supply the\nunique charge ID that was returned from your previous request, and Stripe will\nreturn the corresponding charge information. The same information is returned\nwhen creating or refunding the charge.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetChargesCharge.in.json",
                "out": "./lib/schemas/GetChargesCharge.out.json"
            }
        },
        "PostChargesCharge": {
            "main": "./lib/actions/PostChargesCharge.js",
            "title": "PostChargesCharge",
            "description": "Updates the specified charge by setting the values of the parameters passed. Any\nparameters not provided will be left unchanged.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostChargesCharge.in.json",
                "out": "./lib/schemas/PostChargesCharge.out.json"
            }
        },
        "PostChargesChargeCapture": {
            "main": "./lib/actions/PostChargesChargeCapture.js",
            "title": "PostChargesChargeCapture",
            "description": "Capture the payment of an existing, uncaptured, charge. This is the second half\nof the two-step payment flow, where first you created a charge with the capture\noption set to false.\n\nUncaptured payments expire exactly seven days after they are created. If they\nare not captured by that point in time, they will be marked as refunded and will\nno longer be capturable.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostChargesChargeCapture.in.json",
                "out": "./lib/schemas/PostChargesChargeCapture.out.json"
            }
        },
        "PostChargesChargeDispute": {
            "main": "./lib/actions/PostChargesChargeDispute.js",
            "title": "PostChargesChargeDispute",
            "description": "",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostChargesChargeDispute.in.json",
                "out": "./lib/schemas/PostChargesChargeDispute.out.json"
            }
        },
        "PostChargesChargeDisputeClose": {
            "main": "./lib/actions/PostChargesChargeDisputeClose.js",
            "title": "PostChargesChargeDisputeClose",
            "description": "",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostChargesChargeDisputeClose.in.json",
                "out": "./lib/schemas/PostChargesChargeDisputeClose.out.json"
            }
        },
        "PostChargesChargeRefund": {
            "main": "./lib/actions/PostChargesChargeRefund.js",
            "title": "PostChargesChargeRefund",
            "description": "When you create a new refund, you must specify a Charge or a PaymentIntent\nobject on which to create it.\n\nCreating a new refund will refund a charge that has previously been created but\nnot yet refunded. Funds will be refunded to the credit or debit card that was\noriginally charged.\n\nYou can optionally refund only part of a charge. You can do so multiple times,\nuntil the entire charge has been refunded.\n\nOnce entirely refunded, a charge can't be refunded again. This method will raise\nan error when called on an already-refunded charge, or when trying to refund\nmore money than is left on a charge.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostChargesChargeRefund.in.json",
                "out": "./lib/schemas/PostChargesChargeRefund.out.json"
            }
        },
        "PostChargesChargeRefunds": {
            "main": "./lib/actions/PostChargesChargeRefunds.js",
            "title": "PostChargesChargeRefunds",
            "description": "Create a refund.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostChargesChargeRefunds.in.json",
                "out": "./lib/schemas/PostChargesChargeRefunds.out.json"
            }
        },
        "GetChargesChargeRefundsRefund": {
            "main": "./lib/actions/GetChargesChargeRefundsRefund.js",
            "title": "GetChargesChargeRefundsRefund",
            "description": "Retrieves the details of an existing refund.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetChargesChargeRefundsRefund.in.json",
                "out": "./lib/schemas/GetChargesChargeRefundsRefund.out.json"
            }
        },
        "PostChargesChargeRefundsRefund": {
            "main": "./lib/actions/PostChargesChargeRefundsRefund.js",
            "title": "PostChargesChargeRefundsRefund",
            "description": "Update a specified refund.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostChargesChargeRefundsRefund.in.json",
                "out": "./lib/schemas/PostChargesChargeRefundsRefund.out.json"
            }
        },
        "PostCheckoutSessions": {
            "main": "./lib/actions/PostCheckoutSessions.js",
            "title": "PostCheckoutSessions",
            "description": "Creates a Session object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCheckoutSessions.in.json",
                "out": "./lib/schemas/PostCheckoutSessions.out.json"
            }
        },
        "GetCheckoutSessionsSession": {
            "main": "./lib/actions/GetCheckoutSessionsSession.js",
            "title": "GetCheckoutSessionsSession",
            "description": "Retrieves a Session object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCheckoutSessionsSession.in.json",
                "out": "./lib/schemas/GetCheckoutSessionsSession.out.json"
            }
        },
        "GetCountrySpecsCountry": {
            "main": "./lib/actions/GetCountrySpecsCountry.js",
            "title": "GetCountrySpecsCountry",
            "description": "Returns a Country Spec for a given Country code.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCountrySpecsCountry.in.json",
                "out": "./lib/schemas/GetCountrySpecsCountry.out.json"
            }
        },
        "PostCoupons": {
            "main": "./lib/actions/PostCoupons.js",
            "title": "PostCoupons",
            "description": "You can create coupons easily via the coupon management\n[https://dashboard.stripe.com/coupons] page of the Stripe dashboard. Coupon\ncreation is also accessible via the API if you need to create coupons on the\nfly.\n\nA coupon has either a percent_off or an amount_off and currency. If you set an \namount_off, that amount will be subtracted from any invoice's subtotal. For\nexample, an invoice with a subtotal of 100 will have a final total of 0 if a\ncoupon with an amount_off of 200 is applied to it and an invoice with a subtotal\nof 300 will have a final total of 100 if a coupon with an amount_off of 200 is\napplied to it.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCoupons.in.json",
                "out": "./lib/schemas/PostCoupons.out.json"
            }
        },
        "DeleteCouponsCoupon": {
            "main": "./lib/actions/DeleteCouponsCoupon.js",
            "title": "DeleteCouponsCoupon",
            "description": "You can delete coupons via the coupon management\n[https://dashboard.stripe.com/coupons] page of the Stripe dashboard. However,\ndeleting a coupon does not affect any customers who have already applied the\ncoupon; it means that new customers can't redeem the coupon. You can also delete\ncoupons via the API.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteCouponsCoupon.in.json",
                "out": "./lib/schemas/DeleteCouponsCoupon.out.json"
            }
        },
        "GetCouponsCoupon": {
            "main": "./lib/actions/GetCouponsCoupon.js",
            "title": "GetCouponsCoupon",
            "description": "Retrieves the coupon with the given ID.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCouponsCoupon.in.json",
                "out": "./lib/schemas/GetCouponsCoupon.out.json"
            }
        },
        "PostCouponsCoupon": {
            "main": "./lib/actions/PostCouponsCoupon.js",
            "title": "PostCouponsCoupon",
            "description": "Updates the metadata of a coupon. Other coupon details (currency, duration,\namount_off) are, by design, not editable.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCouponsCoupon.in.json",
                "out": "./lib/schemas/PostCouponsCoupon.out.json"
            }
        },
        "PostCreditNotes": {
            "main": "./lib/actions/PostCreditNotes.js",
            "title": "PostCreditNotes",
            "description": "Issue a credit note to adjust the amount of a finalized invoice. For a \nstatus=open invoice, a credit note reduces its amount_due. For a status=paid \ninvoice, a credit note does not affect its amount_due. Instead, it can result in\nany combination of the following:\n\n * Refund: create a new refund (using refund_amount) or link an existing refund\n   (using refund).\n * Customer balance credit: credit the customer's balance (using credit_amount)\n   which will be automatically applied to their next invoice when it's\n   finalized.\n * Outside of Stripe credit: record the amount that is or will be credited\n   outside of Stripe (using out_of_band_amount).\n\nFor post-payment credit notes the sum of the refund, credit and outside of\nStripe amounts must equal the credit note total.\n\nYou may issue multiple credit notes for an invoice. Each credit note will\nincrement the invoice's pre_payment_credit_notes_amountor \npost_payment_credit_notes_amount depending on its status at the time of credit\nnote creation.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCreditNotes.in.json",
                "out": "./lib/schemas/PostCreditNotes.out.json"
            }
        },
        "GetCreditNotesId": {
            "main": "./lib/actions/GetCreditNotesId.js",
            "title": "GetCreditNotesId",
            "description": "Retrieves the credit note object with the given identifier.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCreditNotesId.in.json",
                "out": "./lib/schemas/GetCreditNotesId.out.json"
            }
        },
        "PostCreditNotesId": {
            "main": "./lib/actions/PostCreditNotesId.js",
            "title": "PostCreditNotesId",
            "description": "Updates an existing credit note.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCreditNotesId.in.json",
                "out": "./lib/schemas/PostCreditNotesId.out.json"
            }
        },
        "PostCreditNotesIdVoid": {
            "main": "./lib/actions/PostCreditNotesIdVoid.js",
            "title": "PostCreditNotesIdVoid",
            "description": "Marks a credit note as void. Learn more about voiding credit notes\n[/docs/billing/invoices/credit-notes#voiding].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCreditNotesIdVoid.in.json",
                "out": "./lib/schemas/PostCreditNotesIdVoid.out.json"
            }
        },
        "PostCustomers": {
            "main": "./lib/actions/PostCustomers.js",
            "title": "PostCustomers",
            "description": "Creates a new customer object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCustomers.in.json",
                "out": "./lib/schemas/PostCustomers.out.json"
            }
        },
        "DeleteCustomersCustomer": {
            "main": "./lib/actions/DeleteCustomersCustomer.js",
            "title": "DeleteCustomersCustomer",
            "description": "Permanently deletes a customer. It cannot be undone. Also immediately cancels\nany active subscriptions on the customer.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteCustomersCustomer.in.json",
                "out": "./lib/schemas/DeleteCustomersCustomer.out.json"
            }
        },
        "GetCustomersCustomer": {
            "main": "./lib/actions/GetCustomersCustomer.js",
            "title": "GetCustomersCustomer",
            "description": "Retrieves the details of an existing customer. You need only supply the unique\ncustomer identifier that was returned upon customer creation.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCustomersCustomer.in.json",
                "out": "./lib/schemas/GetCustomersCustomer.out.json"
            }
        },
        "PostCustomersCustomer": {
            "main": "./lib/actions/PostCustomersCustomer.js",
            "title": "PostCustomersCustomer",
            "description": "Updates the specified customer by setting the values of the parameters passed.\nAny parameters not provided will be left unchanged. For example, if you pass the \nsource parameter, that becomes the customer's active source (e.g., a card) to be\nused for all charges in the future. When you update a customer to a new valid\ncard source by passing the source parameter: for each of the customer's current\nsubscriptions, if the subscription bills automatically and is in the past_due \nstate, then the latest open invoice for the subscription with automatic\ncollection enabled will be retried. This retry will not count as an automatic\nretry, and will not affect the next regularly scheduled payment for the invoice.\nChanging the default_source for a customer will not trigger this behavior.\n\nThis request accepts mostly the same arguments as the customer creation call.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCustomersCustomer.in.json",
                "out": "./lib/schemas/PostCustomersCustomer.out.json"
            }
        },
        "PostCustomersCustomerBalanceTransactions": {
            "main": "./lib/actions/PostCustomersCustomerBalanceTransactions.js",
            "title": "PostCustomersCustomerBalanceTransactions",
            "description": "Creates an immutable transaction that updates the customer's credit balance\n[/docs/billing/customer/balance].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCustomersCustomerBalanceTransactions.in.json",
                "out": "./lib/schemas/PostCustomersCustomerBalanceTransactions.out.json"
            }
        },
        "GetCustomersCustomerBalanceTransactionsTransaction": {
            "main": "./lib/actions/GetCustomersCustomerBalanceTransactionsTransaction.js",
            "title": "GetCustomersCustomerBalanceTransactionsTransaction",
            "description": "Retrieves a specific customer balance transaction that updated the customer's \nbalances [/docs/billing/customer/balance].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCustomersCustomerBalanceTransactionsTransaction.in.json",
                "out": "./lib/schemas/GetCustomersCustomerBalanceTransactionsTransaction.out.json"
            }
        },
        "PostCustomersCustomerBalanceTransactionsTransaction": {
            "main": "./lib/actions/PostCustomersCustomerBalanceTransactionsTransaction.js",
            "title": "PostCustomersCustomerBalanceTransactionsTransaction",
            "description": "Most credit balance transaction fields are immutable, but you may update its \ndescription and metadata.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCustomersCustomerBalanceTransactionsTransaction.in.json",
                "out": "./lib/schemas/PostCustomersCustomerBalanceTransactionsTransaction.out.json"
            }
        },
        "PostCustomersCustomerBankAccounts": {
            "main": "./lib/actions/PostCustomersCustomerBankAccounts.js",
            "title": "PostCustomersCustomerBankAccounts",
            "description": "When you create a new credit card, you must specify a customer or recipient on\nwhich to create it.\n\nIf the card's owner has no default card, then the new card will become the\ndefault. However, if the owner already has a default, then it will not change.\nTo change the default, you should update the customer\n[/docs/api#update_customer] to have a new default_source.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCustomersCustomerBankAccounts.in.json",
                "out": "./lib/schemas/PostCustomersCustomerBankAccounts.out.json"
            }
        },
        "DeleteCustomersCustomerBankAccountsId": {
            "main": "./lib/actions/DeleteCustomersCustomerBankAccountsId.js",
            "title": "DeleteCustomersCustomerBankAccountsId",
            "description": "Delete a specified source for a given customer.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteCustomersCustomerBankAccountsId.in.json",
                "out": "./lib/schemas/DeleteCustomersCustomerBankAccountsId.out.json"
            }
        },
        "GetCustomersCustomerBankAccountsId": {
            "main": "./lib/actions/GetCustomersCustomerBankAccountsId.js",
            "title": "GetCustomersCustomerBankAccountsId",
            "description": "By default, you can see the 10 most recent sources stored on a Customer directly\non the object, but you can also retrieve details about a specific bank account\nstored on the Stripe account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCustomersCustomerBankAccountsId.in.json",
                "out": "./lib/schemas/GetCustomersCustomerBankAccountsId.out.json"
            }
        },
        "PostCustomersCustomerBankAccountsId": {
            "main": "./lib/actions/PostCustomersCustomerBankAccountsId.js",
            "title": "PostCustomersCustomerBankAccountsId",
            "description": "Update a specified source for a given customer.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCustomersCustomerBankAccountsId.in.json",
                "out": "./lib/schemas/PostCustomersCustomerBankAccountsId.out.json"
            }
        },
        "PostCustomersCustomerBankAccountsIdVerify": {
            "main": "./lib/actions/PostCustomersCustomerBankAccountsIdVerify.js",
            "title": "PostCustomersCustomerBankAccountsIdVerify",
            "description": "Verify a specified bank account for a given customer.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCustomersCustomerBankAccountsIdVerify.in.json",
                "out": "./lib/schemas/PostCustomersCustomerBankAccountsIdVerify.out.json"
            }
        },
        "PostCustomersCustomerCards": {
            "main": "./lib/actions/PostCustomersCustomerCards.js",
            "title": "PostCustomersCustomerCards",
            "description": "When you create a new credit card, you must specify a customer or recipient on\nwhich to create it.\n\nIf the card's owner has no default card, then the new card will become the\ndefault. However, if the owner already has a default, then it will not change.\nTo change the default, you should update the customer\n[/docs/api#update_customer] to have a new default_source.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCustomersCustomerCards.in.json",
                "out": "./lib/schemas/PostCustomersCustomerCards.out.json"
            }
        },
        "DeleteCustomersCustomerCardsId": {
            "main": "./lib/actions/DeleteCustomersCustomerCardsId.js",
            "title": "DeleteCustomersCustomerCardsId",
            "description": "Delete a specified source for a given customer.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteCustomersCustomerCardsId.in.json",
                "out": "./lib/schemas/DeleteCustomersCustomerCardsId.out.json"
            }
        },
        "GetCustomersCustomerCardsId": {
            "main": "./lib/actions/GetCustomersCustomerCardsId.js",
            "title": "GetCustomersCustomerCardsId",
            "description": "You can always see the 10 most recent cards directly on a customer; this method\nlets you retrieve details about a specific card stored on the customer.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCustomersCustomerCardsId.in.json",
                "out": "./lib/schemas/GetCustomersCustomerCardsId.out.json"
            }
        },
        "PostCustomersCustomerCardsId": {
            "main": "./lib/actions/PostCustomersCustomerCardsId.js",
            "title": "PostCustomersCustomerCardsId",
            "description": "Update a specified source for a given customer.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCustomersCustomerCardsId.in.json",
                "out": "./lib/schemas/PostCustomersCustomerCardsId.out.json"
            }
        },
        "DeleteCustomersCustomerDiscount": {
            "main": "./lib/actions/DeleteCustomersCustomerDiscount.js",
            "title": "DeleteCustomersCustomerDiscount",
            "description": "Removes the currently applied discount on a customer.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteCustomersCustomerDiscount.in.json",
                "out": "./lib/schemas/DeleteCustomersCustomerDiscount.out.json"
            }
        },
        "PostCustomersCustomerSources": {
            "main": "./lib/actions/PostCustomersCustomerSources.js",
            "title": "PostCustomersCustomerSources",
            "description": "When you create a new credit card, you must specify a customer or recipient on\nwhich to create it.\n\nIf the card's owner has no default card, then the new card will become the\ndefault. However, if the owner already has a default, then it will not change.\nTo change the default, you should update the customer\n[/docs/api#update_customer] to have a new default_source.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCustomersCustomerSources.in.json",
                "out": "./lib/schemas/PostCustomersCustomerSources.out.json"
            }
        },
        "DeleteCustomersCustomerSourcesId": {
            "main": "./lib/actions/DeleteCustomersCustomerSourcesId.js",
            "title": "DeleteCustomersCustomerSourcesId",
            "description": "Delete a specified source for a given customer.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteCustomersCustomerSourcesId.in.json",
                "out": "./lib/schemas/DeleteCustomersCustomerSourcesId.out.json"
            }
        },
        "GetCustomersCustomerSourcesId": {
            "main": "./lib/actions/GetCustomersCustomerSourcesId.js",
            "title": "GetCustomersCustomerSourcesId",
            "description": "Retrieve a specified source for a given customer.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCustomersCustomerSourcesId.in.json",
                "out": "./lib/schemas/GetCustomersCustomerSourcesId.out.json"
            }
        },
        "PostCustomersCustomerSourcesId": {
            "main": "./lib/actions/PostCustomersCustomerSourcesId.js",
            "title": "PostCustomersCustomerSourcesId",
            "description": "Update a specified source for a given customer.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCustomersCustomerSourcesId.in.json",
                "out": "./lib/schemas/PostCustomersCustomerSourcesId.out.json"
            }
        },
        "PostCustomersCustomerSourcesIdVerify": {
            "main": "./lib/actions/PostCustomersCustomerSourcesIdVerify.js",
            "title": "PostCustomersCustomerSourcesIdVerify",
            "description": "Verify a specified bank account for a given customer.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCustomersCustomerSourcesIdVerify.in.json",
                "out": "./lib/schemas/PostCustomersCustomerSourcesIdVerify.out.json"
            }
        },
        "PostCustomersCustomerSubscriptions": {
            "main": "./lib/actions/PostCustomersCustomerSubscriptions.js",
            "title": "PostCustomersCustomerSubscriptions",
            "description": "Creates a new subscription on an existing customer.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCustomersCustomerSubscriptions.in.json",
                "out": "./lib/schemas/PostCustomersCustomerSubscriptions.out.json"
            }
        },
        "DeleteCustomersCustomerSubscriptionsSubscriptionExposedId": {
            "main": "./lib/actions/DeleteCustomersCustomerSubscriptionsSubscriptionExposedId.js",
            "title": "DeleteCustomersCustomerSubscriptionsSubscriptionExposedId",
            "description": "Cancels a customer's subscription. If you set the at_period_end parameter to \ntrue, the subscription will remain active until the end of the period, at which\npoint it will be canceled and not renewed. Otherwise, with the default false \nvalue, the subscription is terminated immediately. In either case, the customer\nwill not be charged again for the subscription.\n\nNote, however, that any pending invoice items that you've created will still be\ncharged for at the end of the period, unless manually deleted. If you've set the\nsubscription to cancel at the end of the period, any pending prorations will\nalso be left in place and collected at the end of the period. But if the\nsubscription is set to cancel immediately, pending prorations will be removed.\n\nBy default, upon subscription cancellation, Stripe will stop automatic\ncollection of all finalized invoices for the customer. This is intended to\nprevent unexpected payment attempts after the customer has canceled a\nsubscription. However, you can resume automatic collection of the invoices\nmanually after subscription cancellation to have us proceed. Or, you could check\nfor unpaid invoices before allowing the customer to cancel the subscription at\nall.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteCustomersCustomerSubscriptionsSubscriptionExposedId.in.json",
                "out": "./lib/schemas/DeleteCustomersCustomerSubscriptionsSubscriptionExposedId.out.json"
            }
        },
        "GetCustomersCustomerSubscriptionsSubscriptionExposedId": {
            "main": "./lib/actions/GetCustomersCustomerSubscriptionsSubscriptionExposedId.js",
            "title": "GetCustomersCustomerSubscriptionsSubscriptionExposedId",
            "description": "Retrieves the subscription with the given ID.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCustomersCustomerSubscriptionsSubscriptionExposedId.in.json",
                "out": "./lib/schemas/GetCustomersCustomerSubscriptionsSubscriptionExposedId.out.json"
            }
        },
        "PostCustomersCustomerSubscriptionsSubscriptionExposedId": {
            "main": "./lib/actions/PostCustomersCustomerSubscriptionsSubscriptionExposedId.js",
            "title": "PostCustomersCustomerSubscriptionsSubscriptionExposedId",
            "description": "Updates an existing subscription on a customer to match the specified\nparameters. When changing plans or quantities, we will optionally prorate the\nprice we charge next month to make up for any price changes. To preview how the\nproration will be calculated, use the upcoming invoice endpoint.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCustomersCustomerSubscriptionsSubscriptionExposedId.in.json",
                "out": "./lib/schemas/PostCustomersCustomerSubscriptionsSubscriptionExposedId.out.json"
            }
        },
        "DeleteCustomersCustomerSubscriptionsSubscriptionExposedIdDiscount": {
            "main": "./lib/actions/DeleteCustomersCustomerSubscriptionsSubscriptionExposedIdDiscount.js",
            "title": "DeleteCustomersCustomerSubscriptionsSubscriptionExposedIdDiscount",
            "description": "Removes the currently applied discount on a customer.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteCustomersCustomerSubscriptionsSubscriptionExposedIdDiscount.in.json",
                "out": "./lib/schemas/DeleteCustomersCustomerSubscriptionsSubscriptionExposedIdDiscount.out.json"
            }
        },
        "PostCustomersCustomerTaxIds": {
            "main": "./lib/actions/PostCustomersCustomerTaxIds.js",
            "title": "PostCustomersCustomerTaxIds",
            "description": "Creates a new TaxID object for a customer.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostCustomersCustomerTaxIds.in.json",
                "out": "./lib/schemas/PostCustomersCustomerTaxIds.out.json"
            }
        },
        "DeleteCustomersCustomerTaxIdsId": {
            "main": "./lib/actions/DeleteCustomersCustomerTaxIdsId.js",
            "title": "DeleteCustomersCustomerTaxIdsId",
            "description": "Deletes an existing TaxID object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteCustomersCustomerTaxIdsId.in.json",
                "out": "./lib/schemas/DeleteCustomersCustomerTaxIdsId.out.json"
            }
        },
        "GetCustomersCustomerTaxIdsId": {
            "main": "./lib/actions/GetCustomersCustomerTaxIdsId.js",
            "title": "GetCustomersCustomerTaxIdsId",
            "description": "Retrieves the TaxID object with the given identifier.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetCustomersCustomerTaxIdsId.in.json",
                "out": "./lib/schemas/GetCustomersCustomerTaxIdsId.out.json"
            }
        },
        "GetDisputesDispute": {
            "main": "./lib/actions/GetDisputesDispute.js",
            "title": "GetDisputesDispute",
            "description": "Retrieves the dispute with the given ID.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetDisputesDispute.in.json",
                "out": "./lib/schemas/GetDisputesDispute.out.json"
            }
        },
        "PostDisputesDispute": {
            "main": "./lib/actions/PostDisputesDispute.js",
            "title": "PostDisputesDispute",
            "description": "When you get a dispute, contacting your customer is always the best first step.\nIf that doesn't work, you can submit evidence to help us resolve the dispute in\nyour favor. You can do this in your dashboard\n[https://dashboard.stripe.com/disputes], but if you prefer, you can use the API\nto submit evidence programmatically.\n\nDepending on your dispute type, different evidence fields will give you a better\nchance of winning your dispute. To figure out which evidence fields to provide,\nsee our guide to dispute types [/docs/disputes/categories].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostDisputesDispute.in.json",
                "out": "./lib/schemas/PostDisputesDispute.out.json"
            }
        },
        "PostDisputesDisputeClose": {
            "main": "./lib/actions/PostDisputesDisputeClose.js",
            "title": "PostDisputesDisputeClose",
            "description": "Closing the dispute for a charge indicates that you do not have any evidence to\nsubmit and are essentially dismissing the dispute, acknowledging it as lost.\n\nThe status of the dispute will change from needs_response to lost. Closing a\ndispute is irreversible.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostDisputesDisputeClose.in.json",
                "out": "./lib/schemas/PostDisputesDisputeClose.out.json"
            }
        },
        "PostEphemeralKeys": {
            "main": "./lib/actions/PostEphemeralKeys.js",
            "title": "PostEphemeralKeys",
            "description": "Creates a short-lived API key for a given resource.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostEphemeralKeys.in.json",
                "out": "./lib/schemas/PostEphemeralKeys.out.json"
            }
        },
        "DeleteEphemeralKeysKey": {
            "main": "./lib/actions/DeleteEphemeralKeysKey.js",
            "title": "DeleteEphemeralKeysKey",
            "description": "Invalidates a short-lived API key for a given resource.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteEphemeralKeysKey.in.json",
                "out": "./lib/schemas/DeleteEphemeralKeysKey.out.json"
            }
        },
        "GetEventsId": {
            "main": "./lib/actions/GetEventsId.js",
            "title": "GetEventsId",
            "description": "Retrieves the details of an event. Supply the unique identifier of the event,\nwhich you might have received in a webhook.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetEventsId.in.json",
                "out": "./lib/schemas/GetEventsId.out.json"
            }
        },
        "GetExchangeRatesRateId": {
            "main": "./lib/actions/GetExchangeRatesRateId.js",
            "title": "GetExchangeRatesRateId",
            "description": "Retrieves the exchange rates from the given currency to every supported\ncurrency.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetExchangeRatesRateId.in.json",
                "out": "./lib/schemas/GetExchangeRatesRateId.out.json"
            }
        },
        "PostFileLinks": {
            "main": "./lib/actions/PostFileLinks.js",
            "title": "PostFileLinks",
            "description": "Creates a new file link object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostFileLinks.in.json",
                "out": "./lib/schemas/PostFileLinks.out.json"
            }
        },
        "GetFileLinksLink": {
            "main": "./lib/actions/GetFileLinksLink.js",
            "title": "GetFileLinksLink",
            "description": "Retrieves the file link with the given ID.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetFileLinksLink.in.json",
                "out": "./lib/schemas/GetFileLinksLink.out.json"
            }
        },
        "PostFileLinksLink": {
            "main": "./lib/actions/PostFileLinksLink.js",
            "title": "PostFileLinksLink",
            "description": "Updates an existing file link object. Expired links can no longer be updated.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostFileLinksLink.in.json",
                "out": "./lib/schemas/PostFileLinksLink.out.json"
            }
        },
        "PostFiles": {
            "main": "./lib/actions/PostFiles.js",
            "title": "PostFiles",
            "description": "To upload a file to Stripe, you'll need to send a request of type \nmultipart/form-data. The request should contain the file you would like to\nupload, as well as the parameters for creating a file.\n\nAll of Stripe's officially supported Client libraries should have support for\nsending multipart/form-data.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostFiles.in.json",
                "out": "./lib/schemas/PostFiles.out.json"
            }
        },
        "GetFilesFile": {
            "main": "./lib/actions/GetFilesFile.js",
            "title": "GetFilesFile",
            "description": "Retrieves the details of an existing file object. Supply the unique file ID from\na file, and Stripe will return the corresponding file object. To access file\ncontents, see the File Upload Guide [/docs/file-upload#download-file-contents].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetFilesFile.in.json",
                "out": "./lib/schemas/GetFilesFile.out.json"
            }
        },
        "GetIdentityVerificationReportsReport": {
            "main": "./lib/actions/GetIdentityVerificationReportsReport.js",
            "title": "GetIdentityVerificationReportsReport",
            "description": "Retrieves an existing VerificationReport",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetIdentityVerificationReportsReport.in.json",
                "out": "./lib/schemas/GetIdentityVerificationReportsReport.out.json"
            }
        },
        "PostIdentityVerificationSessions": {
            "main": "./lib/actions/PostIdentityVerificationSessions.js",
            "title": "PostIdentityVerificationSessions",
            "description": "Creates a VerificationSession object.\n\nAfter the VerificationSession is created, display a verification modal using the\nsession client_secret or send your users to the session's url.\n\nIf your API key is in test mode, verification checks won't actually process,\nthough everything else will occur as if in live mode.\n\nRelated guide: Verify your users' identity documents\n[/docs/identity/verify-identity-documents].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostIdentityVerificationSessions.in.json",
                "out": "./lib/schemas/PostIdentityVerificationSessions.out.json"
            }
        },
        "GetIdentityVerificationSessionsSession": {
            "main": "./lib/actions/GetIdentityVerificationSessionsSession.js",
            "title": "GetIdentityVerificationSessionsSession",
            "description": "Retrieves the details of a VerificationSession that was previously created.\n\nWhen the session status is requires_input, you can use this method to retrieve a\nvalidclient_secret or url to allow re-submission.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetIdentityVerificationSessionsSession.in.json",
                "out": "./lib/schemas/GetIdentityVerificationSessionsSession.out.json"
            }
        },
        "PostIdentityVerificationSessionsSession": {
            "main": "./lib/actions/PostIdentityVerificationSessionsSession.js",
            "title": "PostIdentityVerificationSessionsSession",
            "description": "Updates a VerificationSession object.\n\nWhen the session status is requires_input, you can use this method to update the\nverification check and options.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostIdentityVerificationSessionsSession.in.json",
                "out": "./lib/schemas/PostIdentityVerificationSessionsSession.out.json"
            }
        },
        "PostIdentityVerificationSessionsSessionCancel": {
            "main": "./lib/actions/PostIdentityVerificationSessionsSessionCancel.js",
            "title": "PostIdentityVerificationSessionsSessionCancel",
            "description": "A VerificationSession object can be canceled when it is in requires_input status\n[/docs/identity/how-sessions-work].\n\nOnce canceled, future submission attempts are disabled. This cannot be undone. \nLearn more [/docs/identity/verification-sessions#cancel].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostIdentityVerificationSessionsSessionCancel.in.json",
                "out": "./lib/schemas/PostIdentityVerificationSessionsSessionCancel.out.json"
            }
        },
        "PostIdentityVerificationSessionsSessionRedact": {
            "main": "./lib/actions/PostIdentityVerificationSessionsSessionRedact.js",
            "title": "PostIdentityVerificationSessionsSessionRedact",
            "description": "Redact a VerificationSession to remove all collected information from Stripe.\nThis will redact the VerificationSession and all objects related to it,\nincluding VerificationReports, Events, request logs, etc.\n\nA VerificationSession object can be redacted when it is in requires_input or \nverifiedstatus [/docs/identity/how-sessions-work]. Redacting a\nVerificationSession in requires_actionstate will automatically cancel it.\n\nThe redaction process may take up to four days. When the redaction process is in\nprogress, the VerificationSession's redaction.status field will be set to \nprocessing; when the process is finished, it will change to redacted and an \nidentity.verification_session.redacted event will be emitted.\n\nRedaction is irreversible. Redacted objects are still accessible in the Stripe\nAPI, but all the fields that contain personal data will be replaced by the\nstring [redacted] or a similar placeholder. The metadata field will also be\nerased. Redacted objects cannot be updated or used for any purpose.\n\nLearn more [/docs/identity/verification-sessions#redact].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostIdentityVerificationSessionsSessionRedact.in.json",
                "out": "./lib/schemas/PostIdentityVerificationSessionsSessionRedact.out.json"
            }
        },
        "PostInvoiceitems": {
            "main": "./lib/actions/PostInvoiceitems.js",
            "title": "PostInvoiceitems",
            "description": "Creates an item to be added to a draft invoice (up to 250 items per invoice). If\nno invoice is specified, the item will be on the next invoice created for the\ncustomer specified.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostInvoiceitems.in.json",
                "out": "./lib/schemas/PostInvoiceitems.out.json"
            }
        },
        "DeleteInvoiceitemsInvoiceitem": {
            "main": "./lib/actions/DeleteInvoiceitemsInvoiceitem.js",
            "title": "DeleteInvoiceitemsInvoiceitem",
            "description": "Deletes an invoice item, removing it from an invoice. Deleting invoice items is\nonly possible when they're not attached to invoices, or if it's attached to a\ndraft invoice.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteInvoiceitemsInvoiceitem.in.json",
                "out": "./lib/schemas/DeleteInvoiceitemsInvoiceitem.out.json"
            }
        },
        "GetInvoiceitemsInvoiceitem": {
            "main": "./lib/actions/GetInvoiceitemsInvoiceitem.js",
            "title": "GetInvoiceitemsInvoiceitem",
            "description": "Retrieves the invoice item with the given ID.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetInvoiceitemsInvoiceitem.in.json",
                "out": "./lib/schemas/GetInvoiceitemsInvoiceitem.out.json"
            }
        },
        "PostInvoiceitemsInvoiceitem": {
            "main": "./lib/actions/PostInvoiceitemsInvoiceitem.js",
            "title": "PostInvoiceitemsInvoiceitem",
            "description": "Updates the amount or description of an invoice item on an upcoming invoice.\nUpdating an invoice item is only possible before the invoice it's attached to is\nclosed.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostInvoiceitemsInvoiceitem.in.json",
                "out": "./lib/schemas/PostInvoiceitemsInvoiceitem.out.json"
            }
        },
        "PostInvoices": {
            "main": "./lib/actions/PostInvoices.js",
            "title": "PostInvoices",
            "description": "This endpoint creates a draft invoice for a given customer. The draft invoice\ncreated pulls in all pending invoice items on that customer, including\nprorations. The invoice remains a draft until you finalize the invoice, which\nallows you to pay or send the invoice to your customers.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostInvoices.in.json",
                "out": "./lib/schemas/PostInvoices.out.json"
            }
        },
        "DeleteInvoicesInvoice": {
            "main": "./lib/actions/DeleteInvoicesInvoice.js",
            "title": "DeleteInvoicesInvoice",
            "description": "Permanently deletes a one-off invoice draft. This cannot be undone. Attempts to\ndelete invoices that are no longer in a draft state will fail; once an invoice\nhas been finalized or if an invoice is for a subscription, it must be voided.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteInvoicesInvoice.in.json",
                "out": "./lib/schemas/DeleteInvoicesInvoice.out.json"
            }
        },
        "GetInvoicesInvoice": {
            "main": "./lib/actions/GetInvoicesInvoice.js",
            "title": "GetInvoicesInvoice",
            "description": "Retrieves the invoice with the given ID.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetInvoicesInvoice.in.json",
                "out": "./lib/schemas/GetInvoicesInvoice.out.json"
            }
        },
        "PostInvoicesInvoice": {
            "main": "./lib/actions/PostInvoicesInvoice.js",
            "title": "PostInvoicesInvoice",
            "description": "Draft invoices are fully editable. Once an invoice is finalized\n[/docs/billing/invoices/workflow#finalized], monetary values, as well as \ncollection_method, become uneditable.\n\nIf you would like to stop the Stripe Billing engine from automatically\nfinalizing, reattempting payments on, sending reminders for, or automatically\nreconciling [/docs/billing/invoices/reconciliation] invoices, pass\nauto_advance=false.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostInvoicesInvoice.in.json",
                "out": "./lib/schemas/PostInvoicesInvoice.out.json"
            }
        },
        "PostInvoicesInvoiceFinalize": {
            "main": "./lib/actions/PostInvoicesInvoiceFinalize.js",
            "title": "PostInvoicesInvoiceFinalize",
            "description": "Stripe automatically finalizes drafts before sending and attempting payment on\ninvoices. However, if you'd like to finalize a draft invoice manually, you can\ndo so using this method.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostInvoicesInvoiceFinalize.in.json",
                "out": "./lib/schemas/PostInvoicesInvoiceFinalize.out.json"
            }
        },
        "PostInvoicesInvoiceMarkUncollectible": {
            "main": "./lib/actions/PostInvoicesInvoiceMarkUncollectible.js",
            "title": "PostInvoicesInvoiceMarkUncollectible",
            "description": "Marking an invoice as uncollectible is useful for keeping track of bad debts\nthat can be written off for accounting purposes.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostInvoicesInvoiceMarkUncollectible.in.json",
                "out": "./lib/schemas/PostInvoicesInvoiceMarkUncollectible.out.json"
            }
        },
        "PostInvoicesInvoicePay": {
            "main": "./lib/actions/PostInvoicesInvoicePay.js",
            "title": "PostInvoicesInvoicePay",
            "description": "Stripe automatically creates and then attempts to collect payment on invoices\nfor customers on subscriptions according to your subscriptions settings\n[https://dashboard.stripe.com/account/billing/automatic]. However, if you'd like\nto attempt payment on an invoice out of the normal collection schedule or for\nsome other reason, you can do so.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostInvoicesInvoicePay.in.json",
                "out": "./lib/schemas/PostInvoicesInvoicePay.out.json"
            }
        },
        "PostInvoicesInvoiceSend": {
            "main": "./lib/actions/PostInvoicesInvoiceSend.js",
            "title": "PostInvoicesInvoiceSend",
            "description": "Stripe will automatically send invoices to customers according to your \nsubscriptions settings [https://dashboard.stripe.com/account/billing/automatic].\nHowever, if you'd like to manually send an invoice to your customer out of the\nnormal schedule, you can do so. When sending invoices that have already been\npaid, there will be no reference to the payment in the email.\n\nRequests made in test-mode result in no emails being sent, despite sending an \ninvoice.sent event.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostInvoicesInvoiceSend.in.json",
                "out": "./lib/schemas/PostInvoicesInvoiceSend.out.json"
            }
        },
        "PostInvoicesInvoiceVoid": {
            "main": "./lib/actions/PostInvoicesInvoiceVoid.js",
            "title": "PostInvoicesInvoiceVoid",
            "description": "Mark a finalized invoice as void. This cannot be undone. Voiding an invoice is\nsimilar to deletion, however it only applies to finalized invoices and maintains\na papertrail where the invoice can still be found.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostInvoicesInvoiceVoid.in.json",
                "out": "./lib/schemas/PostInvoicesInvoiceVoid.out.json"
            }
        },
        "GetIssuerFraudRecordsIssuerFraudRecord": {
            "main": "./lib/actions/GetIssuerFraudRecordsIssuerFraudRecord.js",
            "title": "GetIssuerFraudRecordsIssuerFraudRecord",
            "description": "Retrieves the details of an issuer fraud record that has previously been\ncreated. \n\nPlease refer to the issuer fraud record object reference for more details.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetIssuerFraudRecordsIssuerFraudRecord.in.json",
                "out": "./lib/schemas/GetIssuerFraudRecordsIssuerFraudRecord.out.json"
            }
        },
        "GetIssuingAuthorizationsAuthorization": {
            "main": "./lib/actions/GetIssuingAuthorizationsAuthorization.js",
            "title": "GetIssuingAuthorizationsAuthorization",
            "description": "Retrieves an Issuing Authorization object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetIssuingAuthorizationsAuthorization.in.json",
                "out": "./lib/schemas/GetIssuingAuthorizationsAuthorization.out.json"
            }
        },
        "PostIssuingAuthorizationsAuthorization": {
            "main": "./lib/actions/PostIssuingAuthorizationsAuthorization.js",
            "title": "PostIssuingAuthorizationsAuthorization",
            "description": "Updates the specified Issuing Authorization object by setting the values of the\nparameters passed. Any parameters not provided will be left unchanged.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostIssuingAuthorizationsAuthorization.in.json",
                "out": "./lib/schemas/PostIssuingAuthorizationsAuthorization.out.json"
            }
        },
        "PostIssuingAuthorizationsAuthorizationApprove": {
            "main": "./lib/actions/PostIssuingAuthorizationsAuthorizationApprove.js",
            "title": "PostIssuingAuthorizationsAuthorizationApprove",
            "description": "Approves a pending Issuing Authorization object. This request should be made\nwithin the timeout window of the real-time authorization\n[/docs/issuing/controls/real-time-authorizations] flow.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostIssuingAuthorizationsAuthorizationApprove.in.json",
                "out": "./lib/schemas/PostIssuingAuthorizationsAuthorizationApprove.out.json"
            }
        },
        "PostIssuingAuthorizationsAuthorizationDecline": {
            "main": "./lib/actions/PostIssuingAuthorizationsAuthorizationDecline.js",
            "title": "PostIssuingAuthorizationsAuthorizationDecline",
            "description": "Declines a pending Issuing Authorization object. This request should be made\nwithin the timeout window of the real time authorization\n[/docs/issuing/controls/real-time-authorizations] flow.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostIssuingAuthorizationsAuthorizationDecline.in.json",
                "out": "./lib/schemas/PostIssuingAuthorizationsAuthorizationDecline.out.json"
            }
        },
        "PostIssuingCardholders": {
            "main": "./lib/actions/PostIssuingCardholders.js",
            "title": "PostIssuingCardholders",
            "description": "Creates a new Issuing Cardholder object that can be issued cards.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostIssuingCardholders.in.json",
                "out": "./lib/schemas/PostIssuingCardholders.out.json"
            }
        },
        "GetIssuingCardholdersCardholder": {
            "main": "./lib/actions/GetIssuingCardholdersCardholder.js",
            "title": "GetIssuingCardholdersCardholder",
            "description": "Retrieves an Issuing Cardholder object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetIssuingCardholdersCardholder.in.json",
                "out": "./lib/schemas/GetIssuingCardholdersCardholder.out.json"
            }
        },
        "PostIssuingCardholdersCardholder": {
            "main": "./lib/actions/PostIssuingCardholdersCardholder.js",
            "title": "PostIssuingCardholdersCardholder",
            "description": "Updates the specified Issuing Cardholder object by setting the values of the\nparameters passed. Any parameters not provided will be left unchanged.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostIssuingCardholdersCardholder.in.json",
                "out": "./lib/schemas/PostIssuingCardholdersCardholder.out.json"
            }
        },
        "PostIssuingCards": {
            "main": "./lib/actions/PostIssuingCards.js",
            "title": "PostIssuingCards",
            "description": "Creates an Issuing Card object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostIssuingCards.in.json",
                "out": "./lib/schemas/PostIssuingCards.out.json"
            }
        },
        "GetIssuingCardsCard": {
            "main": "./lib/actions/GetIssuingCardsCard.js",
            "title": "GetIssuingCardsCard",
            "description": "Retrieves an Issuing Card object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetIssuingCardsCard.in.json",
                "out": "./lib/schemas/GetIssuingCardsCard.out.json"
            }
        },
        "PostIssuingCardsCard": {
            "main": "./lib/actions/PostIssuingCardsCard.js",
            "title": "PostIssuingCardsCard",
            "description": "Updates the specified Issuing Card object by setting the values of the\nparameters passed. Any parameters not provided will be left unchanged.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostIssuingCardsCard.in.json",
                "out": "./lib/schemas/PostIssuingCardsCard.out.json"
            }
        },
        "PostIssuingDisputes": {
            "main": "./lib/actions/PostIssuingDisputes.js",
            "title": "PostIssuingDisputes",
            "description": "Creates an Issuing Dispute object. Individual pieces of evidence within the \nevidence object are optional at this point. Stripe only validates that required\nevidence is present during submission. Refer to Dispute reasons and evidence\n[/docs/issuing/purchases/disputes#dispute-reasons-and-evidence] for more details\nabout evidence requirements.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostIssuingDisputes.in.json",
                "out": "./lib/schemas/PostIssuingDisputes.out.json"
            }
        },
        "GetIssuingDisputesDispute": {
            "main": "./lib/actions/GetIssuingDisputesDispute.js",
            "title": "GetIssuingDisputesDispute",
            "description": "Retrieves an Issuing Dispute object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetIssuingDisputesDispute.in.json",
                "out": "./lib/schemas/GetIssuingDisputesDispute.out.json"
            }
        },
        "PostIssuingDisputesDispute": {
            "main": "./lib/actions/PostIssuingDisputesDispute.js",
            "title": "PostIssuingDisputesDispute",
            "description": "Updates the specified Issuing Dispute object by setting the values of the\nparameters passed. Any parameters not provided will be left unchanged.\nProperties on the evidence object can be unset by passing in an empty string.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostIssuingDisputesDispute.in.json",
                "out": "./lib/schemas/PostIssuingDisputesDispute.out.json"
            }
        },
        "PostIssuingDisputesDisputeSubmit": {
            "main": "./lib/actions/PostIssuingDisputesDisputeSubmit.js",
            "title": "PostIssuingDisputesDisputeSubmit",
            "description": "Submits an Issuing Dispute to the card network. Stripe validates that all\nevidence fields required for the dispute's reason are present. For more details,\nsee Dispute reasons and evidence\n[/docs/issuing/purchases/disputes#dispute-reasons-and-evidence].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostIssuingDisputesDisputeSubmit.in.json",
                "out": "./lib/schemas/PostIssuingDisputesDisputeSubmit.out.json"
            }
        },
        "GetIssuingSettlementsSettlement": {
            "main": "./lib/actions/GetIssuingSettlementsSettlement.js",
            "title": "GetIssuingSettlementsSettlement",
            "description": "Retrieves an Issuing Settlement object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetIssuingSettlementsSettlement.in.json",
                "out": "./lib/schemas/GetIssuingSettlementsSettlement.out.json"
            }
        },
        "PostIssuingSettlementsSettlement": {
            "main": "./lib/actions/PostIssuingSettlementsSettlement.js",
            "title": "PostIssuingSettlementsSettlement",
            "description": "Updates the specified Issuing Settlement object by setting the values of the\nparameters passed. Any parameters not provided will be left unchanged.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostIssuingSettlementsSettlement.in.json",
                "out": "./lib/schemas/PostIssuingSettlementsSettlement.out.json"
            }
        },
        "GetIssuingTransactionsTransaction": {
            "main": "./lib/actions/GetIssuingTransactionsTransaction.js",
            "title": "GetIssuingTransactionsTransaction",
            "description": "Retrieves an Issuing Transaction object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetIssuingTransactionsTransaction.in.json",
                "out": "./lib/schemas/GetIssuingTransactionsTransaction.out.json"
            }
        },
        "PostIssuingTransactionsTransaction": {
            "main": "./lib/actions/PostIssuingTransactionsTransaction.js",
            "title": "PostIssuingTransactionsTransaction",
            "description": "Updates the specified Issuing Transaction object by setting the values of the\nparameters passed. Any parameters not provided will be left unchanged.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostIssuingTransactionsTransaction.in.json",
                "out": "./lib/schemas/PostIssuingTransactionsTransaction.out.json"
            }
        },
        "GetMandatesMandate": {
            "main": "./lib/actions/GetMandatesMandate.js",
            "title": "GetMandatesMandate",
            "description": "Retrieves a Mandate object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetMandatesMandate.in.json",
                "out": "./lib/schemas/GetMandatesMandate.out.json"
            }
        },
        "GetOrderReturnsId": {
            "main": "./lib/actions/GetOrderReturnsId.js",
            "title": "GetOrderReturnsId",
            "description": "Retrieves the details of an existing order return. Supply the unique order ID\nfrom either an order return creation request or the order return list, and\nStripe will return the corresponding order information.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetOrderReturnsId.in.json",
                "out": "./lib/schemas/GetOrderReturnsId.out.json"
            }
        },
        "PostOrders": {
            "main": "./lib/actions/PostOrders.js",
            "title": "PostOrders",
            "description": "Creates a new order object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostOrders.in.json",
                "out": "./lib/schemas/PostOrders.out.json"
            }
        },
        "GetOrdersId": {
            "main": "./lib/actions/GetOrdersId.js",
            "title": "GetOrdersId",
            "description": "Retrieves the details of an existing order. Supply the unique order ID from\neither an order creation request or the order list, and Stripe will return the\ncorresponding order information.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetOrdersId.in.json",
                "out": "./lib/schemas/GetOrdersId.out.json"
            }
        },
        "PostOrdersId": {
            "main": "./lib/actions/PostOrdersId.js",
            "title": "PostOrdersId",
            "description": "Updates the specific order by setting the values of the parameters passed. Any\nparameters not provided will be left unchanged.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostOrdersId.in.json",
                "out": "./lib/schemas/PostOrdersId.out.json"
            }
        },
        "PostOrdersIdPay": {
            "main": "./lib/actions/PostOrdersIdPay.js",
            "title": "PostOrdersIdPay",
            "description": "Pay an order by providing a source to create a payment.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostOrdersIdPay.in.json",
                "out": "./lib/schemas/PostOrdersIdPay.out.json"
            }
        },
        "PostOrdersIdReturns": {
            "main": "./lib/actions/PostOrdersIdReturns.js",
            "title": "PostOrdersIdReturns",
            "description": "Return all or part of an order. The order must have a status of paid or \nfulfilled before it can be returned. Once all items have been returned, the\norder will become canceled or returned depending on which status the order\nstarted in.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostOrdersIdReturns.in.json",
                "out": "./lib/schemas/PostOrdersIdReturns.out.json"
            }
        },
        "PostPaymentIntents": {
            "main": "./lib/actions/PostPaymentIntents.js",
            "title": "PostPaymentIntents",
            "description": "Creates a PaymentIntent object.\n\nAfter the PaymentIntent is created, attach a payment method and confirm\n[/docs/api/payment_intents/confirm]to continue the payment. You can read more\nabout the different payment flows available via the Payment Intents API here\n[/docs/payments/payment-intents].\n\nWhen confirm=true is used during creation, it is equivalent to creating and\nconfirming the PaymentIntent in the same call. You may use any parameters\navailable in the confirm API [/docs/api/payment_intents/confirm] when \nconfirm=trueis supplied.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostPaymentIntents.in.json",
                "out": "./lib/schemas/PostPaymentIntents.out.json"
            }
        },
        "GetPaymentIntentsIntent": {
            "main": "./lib/actions/GetPaymentIntentsIntent.js",
            "title": "GetPaymentIntentsIntent",
            "description": "Retrieves the details of a PaymentIntent that has previously been created. \n\nClient-side retrieval using a publishable key is allowed when the client_secret \nis provided in the query string. \n\nWhen retrieved with a publishable key, only a subset of properties will be\nreturned. Please refer to the payment intent object reference for more details.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetPaymentIntentsIntent.in.json",
                "out": "./lib/schemas/GetPaymentIntentsIntent.out.json"
            }
        },
        "PostPaymentIntentsIntent": {
            "main": "./lib/actions/PostPaymentIntentsIntent.js",
            "title": "PostPaymentIntentsIntent",
            "description": "Updates properties on a PaymentIntent object without confirming.\n\nDepending on which properties you update, you may need to confirm the\nPaymentIntent again. For example, updating the payment_method will always\nrequire you to confirm the PaymentIntent again. If you prefer to update and\nconfirm at the same time, we recommend updating properties via the confirm API\n[/docs/api/payment_intents/confirm] instead.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostPaymentIntentsIntent.in.json",
                "out": "./lib/schemas/PostPaymentIntentsIntent.out.json"
            }
        },
        "PostPaymentIntentsIntentCancel": {
            "main": "./lib/actions/PostPaymentIntentsIntentCancel.js",
            "title": "PostPaymentIntentsIntentCancel",
            "description": "A PaymentIntent object can be canceled when it is in one of these statuses: \nrequires_payment_method, requires_capture, requires_confirmation, or \nrequires_action. \n\nOnce canceled, no additional charges will be made by the PaymentIntent and any\noperations on the PaymentIntent will fail with an error. For PaymentIntents with \nstatus='requires_capture', the remaining amount_capturable will automatically be\nrefunded.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostPaymentIntentsIntentCancel.in.json",
                "out": "./lib/schemas/PostPaymentIntentsIntentCancel.out.json"
            }
        },
        "PostPaymentIntentsIntentCapture": {
            "main": "./lib/actions/PostPaymentIntentsIntentCapture.js",
            "title": "PostPaymentIntentsIntentCapture",
            "description": "Capture the funds of an existing uncaptured PaymentIntent when its status is \nrequires_capture.\n\nUncaptured PaymentIntents will be canceled exactly seven days after they are\ncreated.\n\nLearn more about separate authorization and capture\n[/docs/payments/capture-later].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostPaymentIntentsIntentCapture.in.json",
                "out": "./lib/schemas/PostPaymentIntentsIntentCapture.out.json"
            }
        },
        "PostPaymentIntentsIntentConfirm": {
            "main": "./lib/actions/PostPaymentIntentsIntentConfirm.js",
            "title": "PostPaymentIntentsIntentConfirm",
            "description": "Confirm that your customer intends to pay with current or provided payment\nmethod. Upon confirmation, the PaymentIntent will attempt to initiate a payment.\n\nIf the selected payment method requires additional authentication steps, the\nPaymentIntent will transition to the requires_action status and suggest\nadditional actions via next_action. If payment fails, the PaymentIntent will\ntransition to the requires_payment_method status. If payment succeeds, the\nPaymentIntent will transition to the succeededstatus (or requires_capture, if \ncapture_method is set to manual).\n\nIf the confirmation_method is automatic, payment may be attempted using our \nclient SDKs [/docs/stripe-js/reference#stripe-handle-card-payment]and the\nPaymentIntent's client_secret. After next_actions are handled by the client, no\nadditional confirmation is required to complete the payment.\n\nIf the confirmation_method is manual, all payment attempts must be initiated\nusing a secret key. If any actions are required for the payment, the\nPaymentIntent will return to the requires_confirmation state after those actions\nare completed. Your server needs to then explicitly re-confirm the PaymentIntent\nto initiate the next payment attempt. Read the expanded documentation\n[/docs/payments/payment-intents/web-manual]to learn more about manual\nconfirmation.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostPaymentIntentsIntentConfirm.in.json",
                "out": "./lib/schemas/PostPaymentIntentsIntentConfirm.out.json"
            }
        },
        "PostPaymentMethods": {
            "main": "./lib/actions/PostPaymentMethods.js",
            "title": "PostPaymentMethods",
            "description": "Creates a PaymentMethod object. Read the Stripe.js reference\n[/docs/stripe-js/reference#stripe-create-payment-method] to learn how to create\nPaymentMethods via Stripe.js.\n\nInstead of creating a PaymentMethod directly, we recommend using the \nPaymentIntents [/docs/payments/accept-a-payment] API to accept a payment\nimmediately or the SetupIntent [/docs/payments/save-and-reuse] API to collect\npayment method details ahead of a future payment.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostPaymentMethods.in.json",
                "out": "./lib/schemas/PostPaymentMethods.out.json"
            }
        },
        "GetPaymentMethodsPaymentMethod": {
            "main": "./lib/actions/GetPaymentMethodsPaymentMethod.js",
            "title": "GetPaymentMethodsPaymentMethod",
            "description": "Retrieves a PaymentMethod object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetPaymentMethodsPaymentMethod.in.json",
                "out": "./lib/schemas/GetPaymentMethodsPaymentMethod.out.json"
            }
        },
        "PostPaymentMethodsPaymentMethod": {
            "main": "./lib/actions/PostPaymentMethodsPaymentMethod.js",
            "title": "PostPaymentMethodsPaymentMethod",
            "description": "Updates a PaymentMethod object. A PaymentMethod must be attached a customer to\nbe updated.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostPaymentMethodsPaymentMethod.in.json",
                "out": "./lib/schemas/PostPaymentMethodsPaymentMethod.out.json"
            }
        },
        "PostPaymentMethodsPaymentMethodAttach": {
            "main": "./lib/actions/PostPaymentMethodsPaymentMethodAttach.js",
            "title": "PostPaymentMethodsPaymentMethodAttach",
            "description": "Attaches a PaymentMethod object to a Customer.\n\nTo attach a new PaymentMethod to a customer for future payments, we recommend\nyou use a SetupIntent [/docs/api/setup_intents]or a PaymentIntent with \nsetup_future_usage\n[/docs/api/payment_intents/create#create_payment_intent-setup_future_usage].\nThese approaches will perform any necessary steps to ensure that the\nPaymentMethod can be used in a future payment. Using the\n/v1/payment_methods/:id/attach endpoint does not ensure that future payments can\nbe made with the attached PaymentMethod. See Optimizing cards for future\npayments [/docs/payments/payment-intents#future-usage] for more information\nabout setting up future payments.\n\nTo use this PaymentMethod as the default for invoice or subscription payments,\nset invoice_settings.default_payment_method\n[/docs/api/customers/update#update_customer-invoice_settings-default_payment_method]\n, on the Customer to the PaymentMethod's ID.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostPaymentMethodsPaymentMethodAttach.in.json",
                "out": "./lib/schemas/PostPaymentMethodsPaymentMethodAttach.out.json"
            }
        },
        "PostPaymentMethodsPaymentMethodDetach": {
            "main": "./lib/actions/PostPaymentMethodsPaymentMethodDetach.js",
            "title": "PostPaymentMethodsPaymentMethodDetach",
            "description": "Detaches a PaymentMethod object from a Customer.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostPaymentMethodsPaymentMethodDetach.in.json",
                "out": "./lib/schemas/PostPaymentMethodsPaymentMethodDetach.out.json"
            }
        },
        "PostPayouts": {
            "main": "./lib/actions/PostPayouts.js",
            "title": "PostPayouts",
            "description": "To send funds to your own bank account, you create a new payout object. Your \nStripe balance must be able to cover the payout amount, or you'll receive an\n\"Insufficient Funds\" error.\n\nIf your API key is in test mode, money won't actually be sent, though everything\nelse will occur as if in live mode.\n\nIf you are creating a manual payout on a Stripe account that uses multiple\npayment source types, you'll need to specify the source type balance that the\npayout should draw from. The balance object details available and pending\namounts by source type.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostPayouts.in.json",
                "out": "./lib/schemas/PostPayouts.out.json"
            }
        },
        "GetPayoutsPayout": {
            "main": "./lib/actions/GetPayoutsPayout.js",
            "title": "GetPayoutsPayout",
            "description": "Retrieves the details of an existing payout. Supply the unique payout ID from\neither a payout creation request or the payout list, and Stripe will return the\ncorresponding payout information.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetPayoutsPayout.in.json",
                "out": "./lib/schemas/GetPayoutsPayout.out.json"
            }
        },
        "PostPayoutsPayout": {
            "main": "./lib/actions/PostPayoutsPayout.js",
            "title": "PostPayoutsPayout",
            "description": "Updates the specified payout by setting the values of the parameters passed. Any\nparameters not provided will be left unchanged. This request accepts only the\nmetadata as arguments.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostPayoutsPayout.in.json",
                "out": "./lib/schemas/PostPayoutsPayout.out.json"
            }
        },
        "PostPayoutsPayoutCancel": {
            "main": "./lib/actions/PostPayoutsPayoutCancel.js",
            "title": "PostPayoutsPayoutCancel",
            "description": "A previously created payout can be canceled if it has not yet been paid out.\nFunds will be refunded to your available balance. You may not cancel automatic\nStripe payouts.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostPayoutsPayoutCancel.in.json",
                "out": "./lib/schemas/PostPayoutsPayoutCancel.out.json"
            }
        },
        "PostPayoutsPayoutReverse": {
            "main": "./lib/actions/PostPayoutsPayoutReverse.js",
            "title": "PostPayoutsPayoutReverse",
            "description": "Reverses a payout by debiting the destination bank account. Only payouts for\nconnected accounts to US bank accounts may be reversed at this time. If the\npayout is in the pending status, /v1/payouts/:id/cancel should be used instead.\n\nBy requesting a reversal via /v1/payouts/:id/reverse, you confirm that the\nauthorized signatory of the selected bank account has authorized the debit on\nthe bank account and that no other authorization is required.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostPayoutsPayoutReverse.in.json",
                "out": "./lib/schemas/PostPayoutsPayoutReverse.out.json"
            }
        },
        "PostPlans": {
            "main": "./lib/actions/PostPlans.js",
            "title": "PostPlans",
            "description": "You can now model subscriptions more flexibly using the Prices API. It replaces\nthe Plans API and is backwards compatible to simplify your migration.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostPlans.in.json",
                "out": "./lib/schemas/PostPlans.out.json"
            }
        },
        "DeletePlansPlan": {
            "main": "./lib/actions/DeletePlansPlan.js",
            "title": "DeletePlansPlan",
            "description": "Deleting plans means new subscribers can't be added. Existing subscribers aren't\naffected.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeletePlansPlan.in.json",
                "out": "./lib/schemas/DeletePlansPlan.out.json"
            }
        },
        "GetPlansPlan": {
            "main": "./lib/actions/GetPlansPlan.js",
            "title": "GetPlansPlan",
            "description": "Retrieves the plan with the given ID.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetPlansPlan.in.json",
                "out": "./lib/schemas/GetPlansPlan.out.json"
            }
        },
        "PostPlansPlan": {
            "main": "./lib/actions/PostPlansPlan.js",
            "title": "PostPlansPlan",
            "description": "Updates the specified plan by setting the values of the parameters passed. Any\nparameters not provided are left unchanged. By design, you cannot change a\nplan's ID, amount, currency, or billing cycle.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostPlansPlan.in.json",
                "out": "./lib/schemas/PostPlansPlan.out.json"
            }
        },
        "PostPrices": {
            "main": "./lib/actions/PostPrices.js",
            "title": "PostPrices",
            "description": "Creates a new price for an existing product. The price can be recurring or\none-time.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostPrices.in.json",
                "out": "./lib/schemas/PostPrices.out.json"
            }
        },
        "GetPricesPrice": {
            "main": "./lib/actions/GetPricesPrice.js",
            "title": "GetPricesPrice",
            "description": "Retrieves the price with the given ID.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetPricesPrice.in.json",
                "out": "./lib/schemas/GetPricesPrice.out.json"
            }
        },
        "PostPricesPrice": {
            "main": "./lib/actions/PostPricesPrice.js",
            "title": "PostPricesPrice",
            "description": "Updates the specified price by setting the values of the parameters passed. Any\nparameters not provided are left unchanged.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostPricesPrice.in.json",
                "out": "./lib/schemas/PostPricesPrice.out.json"
            }
        },
        "PostProducts": {
            "main": "./lib/actions/PostProducts.js",
            "title": "PostProducts",
            "description": "Creates a new product object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostProducts.in.json",
                "out": "./lib/schemas/PostProducts.out.json"
            }
        },
        "DeleteProductsId": {
            "main": "./lib/actions/DeleteProductsId.js",
            "title": "DeleteProductsId",
            "description": "Delete a product. Deleting a product is only possible if it has no prices\nassociated with it. Additionally, deleting a product with type=good is only\npossible if it has no SKUs associated with it.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteProductsId.in.json",
                "out": "./lib/schemas/DeleteProductsId.out.json"
            }
        },
        "GetProductsId": {
            "main": "./lib/actions/GetProductsId.js",
            "title": "GetProductsId",
            "description": "Retrieves the details of an existing product. Supply the unique product ID from\neither a product creation request or the product list, and Stripe will return\nthe corresponding product information.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetProductsId.in.json",
                "out": "./lib/schemas/GetProductsId.out.json"
            }
        },
        "PostProductsId": {
            "main": "./lib/actions/PostProductsId.js",
            "title": "PostProductsId",
            "description": "Updates the specific product by setting the values of the parameters passed. Any\nparameters not provided will be left unchanged.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostProductsId.in.json",
                "out": "./lib/schemas/PostProductsId.out.json"
            }
        },
        "PostPromotionCodes": {
            "main": "./lib/actions/PostPromotionCodes.js",
            "title": "PostPromotionCodes",
            "description": "A promotion code points to a coupon. You can optionally restrict the code to a\nspecific customer, redemption limit, and expiration date.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostPromotionCodes.in.json",
                "out": "./lib/schemas/PostPromotionCodes.out.json"
            }
        },
        "GetPromotionCodesPromotionCode": {
            "main": "./lib/actions/GetPromotionCodesPromotionCode.js",
            "title": "GetPromotionCodesPromotionCode",
            "description": "Retrieves the promotion code with the given ID.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetPromotionCodesPromotionCode.in.json",
                "out": "./lib/schemas/GetPromotionCodesPromotionCode.out.json"
            }
        },
        "PostPromotionCodesPromotionCode": {
            "main": "./lib/actions/PostPromotionCodesPromotionCode.js",
            "title": "PostPromotionCodesPromotionCode",
            "description": "Updates the specified promotion code by setting the values of the parameters\npassed. Most fields are, by design, not editable.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostPromotionCodesPromotionCode.in.json",
                "out": "./lib/schemas/PostPromotionCodesPromotionCode.out.json"
            }
        },
        "PostQuotes": {
            "main": "./lib/actions/PostQuotes.js",
            "title": "PostQuotes",
            "description": "A quote models prices and services for a customer. Default options for header, \ndescription, footer, and expires_at can be set in the dashboard via the quote\ntemplate [https://dashboard.stripe.com/settings/billing/quote].",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostQuotes.in.json",
                "out": "./lib/schemas/PostQuotes.out.json"
            }
        },
        "GetQuotesQuote": {
            "main": "./lib/actions/GetQuotesQuote.js",
            "title": "GetQuotesQuote",
            "description": "Retrieves the quote with the given ID.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetQuotesQuote.in.json",
                "out": "./lib/schemas/GetQuotesQuote.out.json"
            }
        },
        "PostQuotesQuote": {
            "main": "./lib/actions/PostQuotesQuote.js",
            "title": "PostQuotesQuote",
            "description": "A quote models prices and services for a customer.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostQuotesQuote.in.json",
                "out": "./lib/schemas/PostQuotesQuote.out.json"
            }
        },
        "PostQuotesQuoteAccept": {
            "main": "./lib/actions/PostQuotesQuoteAccept.js",
            "title": "PostQuotesQuoteAccept",
            "description": "Accepts the specified quote.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostQuotesQuoteAccept.in.json",
                "out": "./lib/schemas/PostQuotesQuoteAccept.out.json"
            }
        },
        "PostQuotesQuoteCancel": {
            "main": "./lib/actions/PostQuotesQuoteCancel.js",
            "title": "PostQuotesQuoteCancel",
            "description": "Cancels the quote.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostQuotesQuoteCancel.in.json",
                "out": "./lib/schemas/PostQuotesQuoteCancel.out.json"
            }
        },
        "PostQuotesQuoteFinalize": {
            "main": "./lib/actions/PostQuotesQuoteFinalize.js",
            "title": "PostQuotesQuoteFinalize",
            "description": "Finalizes the quote.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostQuotesQuoteFinalize.in.json",
                "out": "./lib/schemas/PostQuotesQuoteFinalize.out.json"
            }
        },
        "GetRadarEarlyFraudWarningsEarlyFraudWarning": {
            "main": "./lib/actions/GetRadarEarlyFraudWarningsEarlyFraudWarning.js",
            "title": "GetRadarEarlyFraudWarningsEarlyFraudWarning",
            "description": "Retrieves the details of an early fraud warning that has previously been\ncreated. \n\nPlease refer to the early fraud warning object reference for more details.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetRadarEarlyFraudWarningsEarlyFraudWarning.in.json",
                "out": "./lib/schemas/GetRadarEarlyFraudWarningsEarlyFraudWarning.out.json"
            }
        },
        "PostRadarValueListItems": {
            "main": "./lib/actions/PostRadarValueListItems.js",
            "title": "PostRadarValueListItems",
            "description": "Creates a new ValueListItem object, which is added to the specified parent value\nlist.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostRadarValueListItems.in.json",
                "out": "./lib/schemas/PostRadarValueListItems.out.json"
            }
        },
        "DeleteRadarValueListItemsItem": {
            "main": "./lib/actions/DeleteRadarValueListItemsItem.js",
            "title": "DeleteRadarValueListItemsItem",
            "description": "Deletes a ValueListItem object, removing it from its parent value list.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteRadarValueListItemsItem.in.json",
                "out": "./lib/schemas/DeleteRadarValueListItemsItem.out.json"
            }
        },
        "GetRadarValueListItemsItem": {
            "main": "./lib/actions/GetRadarValueListItemsItem.js",
            "title": "GetRadarValueListItemsItem",
            "description": "Retrieves a ValueListItem object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetRadarValueListItemsItem.in.json",
                "out": "./lib/schemas/GetRadarValueListItemsItem.out.json"
            }
        },
        "PostRadarValueLists": {
            "main": "./lib/actions/PostRadarValueLists.js",
            "title": "PostRadarValueLists",
            "description": "Creates a new ValueList object, which can then be referenced in rules.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostRadarValueLists.in.json",
                "out": "./lib/schemas/PostRadarValueLists.out.json"
            }
        },
        "DeleteRadarValueListsValueList": {
            "main": "./lib/actions/DeleteRadarValueListsValueList.js",
            "title": "DeleteRadarValueListsValueList",
            "description": "Deletes a ValueList object, also deleting any items contained within the value\nlist. To be deleted, a value list must not be referenced in any rules.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteRadarValueListsValueList.in.json",
                "out": "./lib/schemas/DeleteRadarValueListsValueList.out.json"
            }
        },
        "GetRadarValueListsValueList": {
            "main": "./lib/actions/GetRadarValueListsValueList.js",
            "title": "GetRadarValueListsValueList",
            "description": "Retrieves a ValueList object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetRadarValueListsValueList.in.json",
                "out": "./lib/schemas/GetRadarValueListsValueList.out.json"
            }
        },
        "PostRadarValueListsValueList": {
            "main": "./lib/actions/PostRadarValueListsValueList.js",
            "title": "PostRadarValueListsValueList",
            "description": "Updates a ValueList object by setting the values of the parameters passed. Any\nparameters not provided will be left unchanged. Note that item_type is\nimmutable.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostRadarValueListsValueList.in.json",
                "out": "./lib/schemas/PostRadarValueListsValueList.out.json"
            }
        },
        "PostRecipients": {
            "main": "./lib/actions/PostRecipients.js",
            "title": "PostRecipients",
            "description": "Creates a new Recipient object and verifies the recipient's identity. Also\nverifies the recipient's bank account information or debit card, if either is\nprovided.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostRecipients.in.json",
                "out": "./lib/schemas/PostRecipients.out.json"
            }
        },
        "DeleteRecipientsId": {
            "main": "./lib/actions/DeleteRecipientsId.js",
            "title": "DeleteRecipientsId",
            "description": "Permanently deletes a recipient. It cannot be undone.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteRecipientsId.in.json",
                "out": "./lib/schemas/DeleteRecipientsId.out.json"
            }
        },
        "GetRecipientsId": {
            "main": "./lib/actions/GetRecipientsId.js",
            "title": "GetRecipientsId",
            "description": "Retrieves the details of an existing recipient. You need only supply the unique\nrecipient identifier that was returned upon recipient creation.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetRecipientsId.in.json",
                "out": "./lib/schemas/GetRecipientsId.out.json"
            }
        },
        "PostRecipientsId": {
            "main": "./lib/actions/PostRecipientsId.js",
            "title": "PostRecipientsId",
            "description": "Updates the specified recipient by setting the values of the parameters passed.\nAny parameters not provided will be left unchanged.\n\nIf you update the name or tax ID, the identity verification will automatically\nbe rerun. If you update the bank account, the bank account validation will\nautomatically be rerun.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostRecipientsId.in.json",
                "out": "./lib/schemas/PostRecipientsId.out.json"
            }
        },
        "PostRefunds": {
            "main": "./lib/actions/PostRefunds.js",
            "title": "PostRefunds",
            "description": "Create a refund.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostRefunds.in.json",
                "out": "./lib/schemas/PostRefunds.out.json"
            }
        },
        "GetRefundsRefund": {
            "main": "./lib/actions/GetRefundsRefund.js",
            "title": "GetRefundsRefund",
            "description": "Retrieves the details of an existing refund.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetRefundsRefund.in.json",
                "out": "./lib/schemas/GetRefundsRefund.out.json"
            }
        },
        "PostRefundsRefund": {
            "main": "./lib/actions/PostRefundsRefund.js",
            "title": "PostRefundsRefund",
            "description": "Updates the specified refund by setting the values of the parameters passed. Any\nparameters not provided will be left unchanged.\n\nThis request only accepts metadata as an argument.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostRefundsRefund.in.json",
                "out": "./lib/schemas/PostRefundsRefund.out.json"
            }
        },
        "PostReportingReportRuns": {
            "main": "./lib/actions/PostReportingReportRuns.js",
            "title": "PostReportingReportRuns",
            "description": "Creates a new object and begin running the report. (Certain report types require\na live-mode API key [https://stripe.com/docs/keys#test-live-modes].)",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostReportingReportRuns.in.json",
                "out": "./lib/schemas/PostReportingReportRuns.out.json"
            }
        },
        "GetReportingReportRunsReportRun": {
            "main": "./lib/actions/GetReportingReportRunsReportRun.js",
            "title": "GetReportingReportRunsReportRun",
            "description": "Retrieves the details of an existing Report Run.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetReportingReportRunsReportRun.in.json",
                "out": "./lib/schemas/GetReportingReportRunsReportRun.out.json"
            }
        },
        "GetReportingReportTypesReportType": {
            "main": "./lib/actions/GetReportingReportTypesReportType.js",
            "title": "GetReportingReportTypesReportType",
            "description": "Retrieves the details of a Report Type. (Certain report types require a \nlive-mode API key [https://stripe.com/docs/keys#test-live-modes].)",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetReportingReportTypesReportType.in.json",
                "out": "./lib/schemas/GetReportingReportTypesReportType.out.json"
            }
        },
        "GetReviewsReview": {
            "main": "./lib/actions/GetReviewsReview.js",
            "title": "GetReviewsReview",
            "description": "Retrieves a Review object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetReviewsReview.in.json",
                "out": "./lib/schemas/GetReviewsReview.out.json"
            }
        },
        "PostReviewsReviewApprove": {
            "main": "./lib/actions/PostReviewsReviewApprove.js",
            "title": "PostReviewsReviewApprove",
            "description": "Approves a Review object, closing it and removing it from the list of reviews.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostReviewsReviewApprove.in.json",
                "out": "./lib/schemas/PostReviewsReviewApprove.out.json"
            }
        },
        "PostSetupIntents": {
            "main": "./lib/actions/PostSetupIntents.js",
            "title": "PostSetupIntents",
            "description": "Creates a SetupIntent object.\n\nAfter the SetupIntent is created, attach a payment method and confirm\n[/docs/api/setup_intents/confirm]to collect any required permissions to charge\nthe payment method later.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostSetupIntents.in.json",
                "out": "./lib/schemas/PostSetupIntents.out.json"
            }
        },
        "GetSetupIntentsIntent": {
            "main": "./lib/actions/GetSetupIntentsIntent.js",
            "title": "GetSetupIntentsIntent",
            "description": "Retrieves the details of a SetupIntent that has previously been created. \n\nClient-side retrieval using a publishable key is allowed when the client_secret \nis provided in the query string. \n\nWhen retrieved with a publishable key, only a subset of properties will be\nreturned. Please refer to the SetupIntent object reference for more details.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSetupIntentsIntent.in.json",
                "out": "./lib/schemas/GetSetupIntentsIntent.out.json"
            }
        },
        "PostSetupIntentsIntent": {
            "main": "./lib/actions/PostSetupIntentsIntent.js",
            "title": "PostSetupIntentsIntent",
            "description": "Updates a SetupIntent object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostSetupIntentsIntent.in.json",
                "out": "./lib/schemas/PostSetupIntentsIntent.out.json"
            }
        },
        "PostSetupIntentsIntentCancel": {
            "main": "./lib/actions/PostSetupIntentsIntentCancel.js",
            "title": "PostSetupIntentsIntentCancel",
            "description": "A SetupIntent object can be canceled when it is in one of these statuses: \nrequires_payment_method, requires_confirmation, or requires_action. \n\nOnce canceled, setup is abandoned and any operations on the SetupIntent will\nfail with an error.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostSetupIntentsIntentCancel.in.json",
                "out": "./lib/schemas/PostSetupIntentsIntentCancel.out.json"
            }
        },
        "PostSetupIntentsIntentConfirm": {
            "main": "./lib/actions/PostSetupIntentsIntentConfirm.js",
            "title": "PostSetupIntentsIntentConfirm",
            "description": "Confirm that your customer intends to set up the current or provided payment\nmethod. For example, you would confirm a SetupIntent when a customer hits the\n\"Save\" button on a payment method management page on your website.\n\nIf the selected payment method does not require any additional steps from the\ncustomer, the SetupIntent will transition to thesucceeded status.\n\nOtherwise, it will transition to the requires_action status and suggest\nadditional actions via next_action. If setup fails, the SetupIntent will\ntransition to therequires_payment_method status.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostSetupIntentsIntentConfirm.in.json",
                "out": "./lib/schemas/PostSetupIntentsIntentConfirm.out.json"
            }
        },
        "GetSigmaScheduledQueryRunsScheduledQueryRun": {
            "main": "./lib/actions/GetSigmaScheduledQueryRunsScheduledQueryRun.js",
            "title": "GetSigmaScheduledQueryRunsScheduledQueryRun",
            "description": "Retrieves the details of an scheduled query run.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSigmaScheduledQueryRunsScheduledQueryRun.in.json",
                "out": "./lib/schemas/GetSigmaScheduledQueryRunsScheduledQueryRun.out.json"
            }
        },
        "PostSkus": {
            "main": "./lib/actions/PostSkus.js",
            "title": "PostSkus",
            "description": "Creates a new SKU associated with a product.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostSkus.in.json",
                "out": "./lib/schemas/PostSkus.out.json"
            }
        },
        "DeleteSkusId": {
            "main": "./lib/actions/DeleteSkusId.js",
            "title": "DeleteSkusId",
            "description": "Delete a SKU. Deleting a SKU is only possible until it has been used in an\norder.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteSkusId.in.json",
                "out": "./lib/schemas/DeleteSkusId.out.json"
            }
        },
        "GetSkusId": {
            "main": "./lib/actions/GetSkusId.js",
            "title": "GetSkusId",
            "description": "Retrieves the details of an existing SKU. Supply the unique SKU identifier from\neither a SKU creation request or from the product, and Stripe will return the\ncorresponding SKU information.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSkusId.in.json",
                "out": "./lib/schemas/GetSkusId.out.json"
            }
        },
        "PostSkusId": {
            "main": "./lib/actions/PostSkusId.js",
            "title": "PostSkusId",
            "description": "Updates the specific SKU by setting the values of the parameters passed. Any\nparameters not provided will be left unchanged.\n\nNote that a SKU's attributes are not editable. Instead, you would need to\ndeactivate the existing SKU and create a new one with the new attribute values.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostSkusId.in.json",
                "out": "./lib/schemas/PostSkusId.out.json"
            }
        },
        "PostSources": {
            "main": "./lib/actions/PostSources.js",
            "title": "PostSources",
            "description": "Creates a new source object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostSources.in.json",
                "out": "./lib/schemas/PostSources.out.json"
            }
        },
        "GetSourcesSource": {
            "main": "./lib/actions/GetSourcesSource.js",
            "title": "GetSourcesSource",
            "description": "Retrieves an existing source object. Supply the unique source ID from a source\ncreation request and Stripe will return the corresponding up-to-date source\nobject information.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSourcesSource.in.json",
                "out": "./lib/schemas/GetSourcesSource.out.json"
            }
        },
        "PostSourcesSource": {
            "main": "./lib/actions/PostSourcesSource.js",
            "title": "PostSourcesSource",
            "description": "Updates the specified source by setting the values of the parameters passed. Any\nparameters not provided will be left unchanged.\n\nThis request accepts the metadata and owner as arguments. It is also possible to\nupdate type specific information for selected payment methods. Please refer to\nour payment method guides [/docs/sources] for more detail.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostSourcesSource.in.json",
                "out": "./lib/schemas/PostSourcesSource.out.json"
            }
        },
        "GetSourcesSourceMandateNotificationsMandateNotification": {
            "main": "./lib/actions/GetSourcesSourceMandateNotificationsMandateNotification.js",
            "title": "GetSourcesSourceMandateNotificationsMandateNotification",
            "description": "Retrieves a new Source MandateNotification.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSourcesSourceMandateNotificationsMandateNotification.in.json",
                "out": "./lib/schemas/GetSourcesSourceMandateNotificationsMandateNotification.out.json"
            }
        },
        "GetSourcesSourceSourceTransactionsSourceTransaction": {
            "main": "./lib/actions/GetSourcesSourceSourceTransactionsSourceTransaction.js",
            "title": "GetSourcesSourceSourceTransactionsSourceTransaction",
            "description": "Retrieve an existing source transaction object. Supply the unique source ID from\na source creation request and the source transaction ID and Stripe will return\nthe corresponding up-to-date source object information.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSourcesSourceSourceTransactionsSourceTransaction.in.json",
                "out": "./lib/schemas/GetSourcesSourceSourceTransactionsSourceTransaction.out.json"
            }
        },
        "PostSourcesSourceVerify": {
            "main": "./lib/actions/PostSourcesSourceVerify.js",
            "title": "PostSourcesSourceVerify",
            "description": "Verify a given source.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostSourcesSourceVerify.in.json",
                "out": "./lib/schemas/PostSourcesSourceVerify.out.json"
            }
        },
        "PostSubscriptionItems": {
            "main": "./lib/actions/PostSubscriptionItems.js",
            "title": "PostSubscriptionItems",
            "description": "Adds a new item to an existing subscription. No existing items will be changed\nor replaced.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostSubscriptionItems.in.json",
                "out": "./lib/schemas/PostSubscriptionItems.out.json"
            }
        },
        "DeleteSubscriptionItemsItem": {
            "main": "./lib/actions/DeleteSubscriptionItemsItem.js",
            "title": "DeleteSubscriptionItemsItem",
            "description": "Deletes an item from the subscription. Removing a subscription item from a\nsubscription will not cancel the subscription.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteSubscriptionItemsItem.in.json",
                "out": "./lib/schemas/DeleteSubscriptionItemsItem.out.json"
            }
        },
        "GetSubscriptionItemsItem": {
            "main": "./lib/actions/GetSubscriptionItemsItem.js",
            "title": "GetSubscriptionItemsItem",
            "description": "Retrieves the subscription item with the given ID.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSubscriptionItemsItem.in.json",
                "out": "./lib/schemas/GetSubscriptionItemsItem.out.json"
            }
        },
        "PostSubscriptionItemsItem": {
            "main": "./lib/actions/PostSubscriptionItemsItem.js",
            "title": "PostSubscriptionItemsItem",
            "description": "Updates the plan or quantity of an item on a current subscription.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostSubscriptionItemsItem.in.json",
                "out": "./lib/schemas/PostSubscriptionItemsItem.out.json"
            }
        },
        "PostSubscriptionItemsSubscriptionItemUsageRecords": {
            "main": "./lib/actions/PostSubscriptionItemsSubscriptionItemUsageRecords.js",
            "title": "PostSubscriptionItemsSubscriptionItemUsageRecords",
            "description": "Creates a usage record for a specified subscription item and date, and fills it\nwith a quantity.\n\nUsage records provide quantity information that Stripe uses to track how much a\ncustomer is using your service. With usage information and the pricing model set\nup by the metered billing\n[https://stripe.com/docs/billing/subscriptions/metered-billing] plan, Stripe\nhelps you send accurate invoices to your customers.\n\nThe default calculation for usage is to add up all the quantity values of the\nusage records within a billing period. You can change this default behavior with\nthe billing plan's aggregate_usage parameter\n[/docs/api/plans/create#create_plan-aggregate_usage]. When there is more than\none usage record with the same timestamp, Stripe adds the quantity values\ntogether. In most cases, this is the desired resolution, however, you can change\nthis behavior with the action parameter.\n\nThe default pricing model for metered billing is per-unit pricing\n[/docs/api/plans/object#plan_object-billing_scheme]. For finer granularity, you\ncan configure metered billing to have a tiered pricing\n[https://stripe.com/docs/billing/subscriptions/tiers] model.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostSubscriptionItemsSubscriptionItemUsageRecords.in.json",
                "out": "./lib/schemas/PostSubscriptionItemsSubscriptionItemUsageRecords.out.json"
            }
        },
        "PostSubscriptionSchedules": {
            "main": "./lib/actions/PostSubscriptionSchedules.js",
            "title": "PostSubscriptionSchedules",
            "description": "Creates a new subscription schedule object. Each customer can have up to 500\nactive or scheduled subscriptions.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostSubscriptionSchedules.in.json",
                "out": "./lib/schemas/PostSubscriptionSchedules.out.json"
            }
        },
        "GetSubscriptionSchedulesSchedule": {
            "main": "./lib/actions/GetSubscriptionSchedulesSchedule.js",
            "title": "GetSubscriptionSchedulesSchedule",
            "description": "Retrieves the details of an existing subscription schedule. You only need to\nsupply the unique subscription schedule identifier that was returned upon\nsubscription schedule creation.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSubscriptionSchedulesSchedule.in.json",
                "out": "./lib/schemas/GetSubscriptionSchedulesSchedule.out.json"
            }
        },
        "PostSubscriptionSchedulesSchedule": {
            "main": "./lib/actions/PostSubscriptionSchedulesSchedule.js",
            "title": "PostSubscriptionSchedulesSchedule",
            "description": "Updates an existing subscription schedule.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostSubscriptionSchedulesSchedule.in.json",
                "out": "./lib/schemas/PostSubscriptionSchedulesSchedule.out.json"
            }
        },
        "PostSubscriptionSchedulesScheduleCancel": {
            "main": "./lib/actions/PostSubscriptionSchedulesScheduleCancel.js",
            "title": "PostSubscriptionSchedulesScheduleCancel",
            "description": "Cancels a subscription schedule and its associated subscription immediately (if\nthe subscription schedule has an active subscription). A subscription schedule\ncan only be canceled if its status is not_started or active.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostSubscriptionSchedulesScheduleCancel.in.json",
                "out": "./lib/schemas/PostSubscriptionSchedulesScheduleCancel.out.json"
            }
        },
        "PostSubscriptionSchedulesScheduleRelease": {
            "main": "./lib/actions/PostSubscriptionSchedulesScheduleRelease.js",
            "title": "PostSubscriptionSchedulesScheduleRelease",
            "description": "Releases the subscription schedule immediately, which will stop scheduling of\nits phases, but leave any existing subscription in place. A schedule can only be\nreleased if its status is not_started or active. If the subscription schedule is\ncurrently associated with a subscription, releasing it will remove its \nsubscription property and set the subscription's ID to the released_subscription \nproperty.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostSubscriptionSchedulesScheduleRelease.in.json",
                "out": "./lib/schemas/PostSubscriptionSchedulesScheduleRelease.out.json"
            }
        },
        "PostSubscriptions": {
            "main": "./lib/actions/PostSubscriptions.js",
            "title": "PostSubscriptions",
            "description": "Creates a new subscription on an existing customer. Each customer can have up to\n500 active or scheduled subscriptions.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostSubscriptions.in.json",
                "out": "./lib/schemas/PostSubscriptions.out.json"
            }
        },
        "DeleteSubscriptionsSubscriptionExposedId": {
            "main": "./lib/actions/DeleteSubscriptionsSubscriptionExposedId.js",
            "title": "DeleteSubscriptionsSubscriptionExposedId",
            "description": "Cancels a customer's subscription immediately. The customer will not be charged\nagain for the subscription.\n\nNote, however, that any pending invoice items that you've created will still be\ncharged for at the end of the period, unless manually deleted. If you've set the\nsubscription to cancel at the end of the period, any pending prorations will\nalso be left in place and collected at the end of the period. But if the\nsubscription is set to cancel immediately, pending prorations will be removed.\n\nBy default, upon subscription cancellation, Stripe will stop automatic\ncollection of all finalized invoices for the customer. This is intended to\nprevent unexpected payment attempts after the customer has canceled a\nsubscription. However, you can resume automatic collection of the invoices\nmanually after subscription cancellation to have us proceed. Or, you could check\nfor unpaid invoices before allowing the customer to cancel the subscription at\nall.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteSubscriptionsSubscriptionExposedId.in.json",
                "out": "./lib/schemas/DeleteSubscriptionsSubscriptionExposedId.out.json"
            }
        },
        "GetSubscriptionsSubscriptionExposedId": {
            "main": "./lib/actions/GetSubscriptionsSubscriptionExposedId.js",
            "title": "GetSubscriptionsSubscriptionExposedId",
            "description": "Retrieves the subscription with the given ID.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetSubscriptionsSubscriptionExposedId.in.json",
                "out": "./lib/schemas/GetSubscriptionsSubscriptionExposedId.out.json"
            }
        },
        "PostSubscriptionsSubscriptionExposedId": {
            "main": "./lib/actions/PostSubscriptionsSubscriptionExposedId.js",
            "title": "PostSubscriptionsSubscriptionExposedId",
            "description": "Updates an existing subscription on a customer to match the specified\nparameters. When changing plans or quantities, we will optionally prorate the\nprice we charge next month to make up for any price changes. To preview how the\nproration will be calculated, use the upcoming invoice endpoint.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostSubscriptionsSubscriptionExposedId.in.json",
                "out": "./lib/schemas/PostSubscriptionsSubscriptionExposedId.out.json"
            }
        },
        "DeleteSubscriptionsSubscriptionExposedIdDiscount": {
            "main": "./lib/actions/DeleteSubscriptionsSubscriptionExposedIdDiscount.js",
            "title": "DeleteSubscriptionsSubscriptionExposedIdDiscount",
            "description": "Removes the currently applied discount on a subscription.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteSubscriptionsSubscriptionExposedIdDiscount.in.json",
                "out": "./lib/schemas/DeleteSubscriptionsSubscriptionExposedIdDiscount.out.json"
            }
        },
        "GetTaxCodesId": {
            "main": "./lib/actions/GetTaxCodesId.js",
            "title": "GetTaxCodesId",
            "description": "Retrieves the details of an existing tax code. Supply the unique tax code ID and\nStripe will return the corresponding tax code information.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTaxCodesId.in.json",
                "out": "./lib/schemas/GetTaxCodesId.out.json"
            }
        },
        "PostTaxRates": {
            "main": "./lib/actions/PostTaxRates.js",
            "title": "PostTaxRates",
            "description": "Creates a new tax rate.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostTaxRates.in.json",
                "out": "./lib/schemas/PostTaxRates.out.json"
            }
        },
        "GetTaxRatesTaxRate": {
            "main": "./lib/actions/GetTaxRatesTaxRate.js",
            "title": "GetTaxRatesTaxRate",
            "description": "Retrieves a tax rate with the given ID",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTaxRatesTaxRate.in.json",
                "out": "./lib/schemas/GetTaxRatesTaxRate.out.json"
            }
        },
        "PostTaxRatesTaxRate": {
            "main": "./lib/actions/PostTaxRatesTaxRate.js",
            "title": "PostTaxRatesTaxRate",
            "description": "Updates an existing tax rate.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostTaxRatesTaxRate.in.json",
                "out": "./lib/schemas/PostTaxRatesTaxRate.out.json"
            }
        },
        "PostTerminalConnectionTokens": {
            "main": "./lib/actions/PostTerminalConnectionTokens.js",
            "title": "PostTerminalConnectionTokens",
            "description": "To connect to a reader the Stripe Terminal SDK needs to retrieve a short-lived\nconnection token from Stripe, proxied through your server. On your backend, add\nan endpoint that creates and returns a connection token.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostTerminalConnectionTokens.in.json",
                "out": "./lib/schemas/PostTerminalConnectionTokens.out.json"
            }
        },
        "PostTerminalLocations": {
            "main": "./lib/actions/PostTerminalLocations.js",
            "title": "PostTerminalLocations",
            "description": "Creates a new Location object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostTerminalLocations.in.json",
                "out": "./lib/schemas/PostTerminalLocations.out.json"
            }
        },
        "DeleteTerminalLocationsLocation": {
            "main": "./lib/actions/DeleteTerminalLocationsLocation.js",
            "title": "DeleteTerminalLocationsLocation",
            "description": "Deletes a Location object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteTerminalLocationsLocation.in.json",
                "out": "./lib/schemas/DeleteTerminalLocationsLocation.out.json"
            }
        },
        "GetTerminalLocationsLocation": {
            "main": "./lib/actions/GetTerminalLocationsLocation.js",
            "title": "GetTerminalLocationsLocation",
            "description": "Retrieves a Location object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTerminalLocationsLocation.in.json",
                "out": "./lib/schemas/GetTerminalLocationsLocation.out.json"
            }
        },
        "PostTerminalLocationsLocation": {
            "main": "./lib/actions/PostTerminalLocationsLocation.js",
            "title": "PostTerminalLocationsLocation",
            "description": "Updates a Location object by setting the values of the parameters passed. Any\nparameters not provided will be left unchanged.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostTerminalLocationsLocation.in.json",
                "out": "./lib/schemas/PostTerminalLocationsLocation.out.json"
            }
        },
        "PostTerminalReaders": {
            "main": "./lib/actions/PostTerminalReaders.js",
            "title": "PostTerminalReaders",
            "description": "Creates a new Reader object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostTerminalReaders.in.json",
                "out": "./lib/schemas/PostTerminalReaders.out.json"
            }
        },
        "DeleteTerminalReadersReader": {
            "main": "./lib/actions/DeleteTerminalReadersReader.js",
            "title": "DeleteTerminalReadersReader",
            "description": "Deletes a Reader object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteTerminalReadersReader.in.json",
                "out": "./lib/schemas/DeleteTerminalReadersReader.out.json"
            }
        },
        "GetTerminalReadersReader": {
            "main": "./lib/actions/GetTerminalReadersReader.js",
            "title": "GetTerminalReadersReader",
            "description": "Retrieves a Reader object.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTerminalReadersReader.in.json",
                "out": "./lib/schemas/GetTerminalReadersReader.out.json"
            }
        },
        "PostTerminalReadersReader": {
            "main": "./lib/actions/PostTerminalReadersReader.js",
            "title": "PostTerminalReadersReader",
            "description": "Updates a Reader object by setting the values of the parameters passed. Any\nparameters not provided will be left unchanged.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostTerminalReadersReader.in.json",
                "out": "./lib/schemas/PostTerminalReadersReader.out.json"
            }
        },
        "PostTokens": {
            "main": "./lib/actions/PostTokens.js",
            "title": "PostTokens",
            "description": "Creates a single-use token that represents a bank account's details. This token\ncan be used with any API method in place of a bank account dictionary. This\ntoken can be used only once, by attaching it to a Custom account.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostTokens.in.json",
                "out": "./lib/schemas/PostTokens.out.json"
            }
        },
        "GetTokensToken": {
            "main": "./lib/actions/GetTokensToken.js",
            "title": "GetTokensToken",
            "description": "Retrieves the token with the given ID.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTokensToken.in.json",
                "out": "./lib/schemas/GetTokensToken.out.json"
            }
        },
        "PostTopups": {
            "main": "./lib/actions/PostTopups.js",
            "title": "PostTopups",
            "description": "Top up the balance of an account",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostTopups.in.json",
                "out": "./lib/schemas/PostTopups.out.json"
            }
        },
        "GetTopupsTopup": {
            "main": "./lib/actions/GetTopupsTopup.js",
            "title": "GetTopupsTopup",
            "description": "Retrieves the details of a top-up that has previously been created. Supply the\nunique top-up ID that was returned from your previous request, and Stripe will\nreturn the corresponding top-up information.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTopupsTopup.in.json",
                "out": "./lib/schemas/GetTopupsTopup.out.json"
            }
        },
        "PostTopupsTopup": {
            "main": "./lib/actions/PostTopupsTopup.js",
            "title": "PostTopupsTopup",
            "description": "Updates the metadata of a top-up. Other top-up details are not editable by\ndesign.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostTopupsTopup.in.json",
                "out": "./lib/schemas/PostTopupsTopup.out.json"
            }
        },
        "PostTopupsTopupCancel": {
            "main": "./lib/actions/PostTopupsTopupCancel.js",
            "title": "PostTopupsTopupCancel",
            "description": "Cancels a top-up. Only pending top-ups can be canceled.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostTopupsTopupCancel.in.json",
                "out": "./lib/schemas/PostTopupsTopupCancel.out.json"
            }
        },
        "PostTransfers": {
            "main": "./lib/actions/PostTransfers.js",
            "title": "PostTransfers",
            "description": "To send funds from your Stripe account to a connected account, you create a new\ntransfer object. Your Stripe balance must be able to cover the transfer amount,\nor you'll receive an \"Insufficient Funds\" error.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostTransfers.in.json",
                "out": "./lib/schemas/PostTransfers.out.json"
            }
        },
        "PostTransfersIdReversals": {
            "main": "./lib/actions/PostTransfersIdReversals.js",
            "title": "PostTransfersIdReversals",
            "description": "When you create a new reversal, you must specify a transfer to create it on.\n\nWhen reversing transfers, you can optionally reverse part of the transfer. You\ncan do so as many times as you wish until the entire transfer has been reversed.\n\nOnce entirely reversed, a transfer can't be reversed again. This method will\nreturn an error when called on an already-reversed transfer, or when trying to\nreverse more money than is left on a transfer.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostTransfersIdReversals.in.json",
                "out": "./lib/schemas/PostTransfersIdReversals.out.json"
            }
        },
        "GetTransfersTransfer": {
            "main": "./lib/actions/GetTransfersTransfer.js",
            "title": "GetTransfersTransfer",
            "description": "Retrieves the details of an existing transfer. Supply the unique transfer ID\nfrom either a transfer creation request or the transfer list, and Stripe will\nreturn the corresponding transfer information.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTransfersTransfer.in.json",
                "out": "./lib/schemas/GetTransfersTransfer.out.json"
            }
        },
        "PostTransfersTransfer": {
            "main": "./lib/actions/PostTransfersTransfer.js",
            "title": "PostTransfersTransfer",
            "description": "Updates the specified transfer by setting the values of the parameters passed.\nAny parameters not provided will be left unchanged.\n\nThis request accepts only metadata as an argument.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostTransfersTransfer.in.json",
                "out": "./lib/schemas/PostTransfersTransfer.out.json"
            }
        },
        "GetTransfersTransferReversalsId": {
            "main": "./lib/actions/GetTransfersTransferReversalsId.js",
            "title": "GetTransfersTransferReversalsId",
            "description": "By default, you can see the 10 most recent reversals stored directly on the\ntransfer object, but you can also retrieve details about a specific reversal\nstored on the transfer.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetTransfersTransferReversalsId.in.json",
                "out": "./lib/schemas/GetTransfersTransferReversalsId.out.json"
            }
        },
        "PostTransfersTransferReversalsId": {
            "main": "./lib/actions/PostTransfersTransferReversalsId.js",
            "title": "PostTransfersTransferReversalsId",
            "description": "Updates the specified reversal by setting the values of the parameters passed.\nAny parameters not provided will be left unchanged.\n\nThis request only accepts metadata and description as arguments.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostTransfersTransferReversalsId.in.json",
                "out": "./lib/schemas/PostTransfersTransferReversalsId.out.json"
            }
        },
        "PostWebhookEndpoints": {
            "main": "./lib/actions/PostWebhookEndpoints.js",
            "title": "PostWebhookEndpoints",
            "description": "A webhook endpoint must have a url and a list of enabled_events. You may\noptionally specify the Boolean connect parameter. If set to true, then a Connect\nwebhook endpoint that notifies the specified url about events from all connected\naccounts is created; otherwise an account webhook endpoint that notifies the\nspecified url only about events from your account is created. You can also\ncreate webhook endpoints in the webhooks settings\n[https://dashboard.stripe.com/account/webhooks] section of the Dashboard.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostWebhookEndpoints.in.json",
                "out": "./lib/schemas/PostWebhookEndpoints.out.json"
            }
        },
        "DeleteWebhookEndpointsWebhookEndpoint": {
            "main": "./lib/actions/DeleteWebhookEndpointsWebhookEndpoint.js",
            "title": "DeleteWebhookEndpointsWebhookEndpoint",
            "description": "You can also delete webhook endpoints via the webhook endpoint management\n[https://dashboard.stripe.com/account/webhooks] page of the Stripe dashboard.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteWebhookEndpointsWebhookEndpoint.in.json",
                "out": "./lib/schemas/DeleteWebhookEndpointsWebhookEndpoint.out.json"
            }
        },
        "GetWebhookEndpointsWebhookEndpoint": {
            "main": "./lib/actions/GetWebhookEndpointsWebhookEndpoint.js",
            "title": "GetWebhookEndpointsWebhookEndpoint",
            "description": "Retrieves the webhook endpoint with the given ID.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/GetWebhookEndpointsWebhookEndpoint.in.json",
                "out": "./lib/schemas/GetWebhookEndpointsWebhookEndpoint.out.json"
            }
        },
        "PostWebhookEndpointsWebhookEndpoint": {
            "main": "./lib/actions/PostWebhookEndpointsWebhookEndpoint.js",
            "title": "PostWebhookEndpointsWebhookEndpoint",
            "description": "Updates the webhook endpoint. You may edit the url, the list of enabled_events,\nand the status of your endpoint.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/PostWebhookEndpointsWebhookEndpoint.in.json",
                "out": "./lib/schemas/PostWebhookEndpointsWebhookEndpoint.out.json"
            }
        }
    }
}